{
  "openapi": "3.0.0",
  "info": {
    "title": "installed-product",
    "version": "1.0",
    "contact": {
      "name": "Benoit Darche-Cessens",
      "email": "benoit.darche-cessens@se.com",
      "url": "https://se.com"
    },
    "description": "This specification defines the structure of installed Products and Installed based API which includes internal facet, sites access legitimity for a contact,..."
  },
  "servers": [
    {
      "url": "https://api.qa.se.com/v1/reference-data/installed-base"
    }
  ],
  "paths": {
    "/installed-products/reconciliation/collect-publishers/{collect-publisher-code}": {
      "parameters": [
        {
          "name": "collect-publisher-code",
          "in": "path",
          "required": true,
          "description": "Indicates the code of the collector of asset (e.g. ALM)",
          "schema": {
            "type": "string",
            "pattern": ""
          }
        }
      ],
      "get": {
        "summary": "Retrieve asset known by a collect publisher",
        "description": "Retrieve reconciliation results between external and internal facet (MDM processing, including DQC, duplicates detection, ...) for a given publisher. Accept full or delta mode (between 2 calls)",
        "tags": [
          "InstalledBase endpoint technicalSpec"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "assetFacetsFull": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/assetFacetsResultSet"
                          }
                        },
                        "page": {
                          "type": "integer"
                        },
                        "pageSize": {
                          "type": "integer"
                        },
                        "recordCount": {
                          "type": "integer"
                        }
                      }
                    },
                    {
                      "properties": {
                        "recordCount": {
                          "type": "integer"
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP401-Unauthorized.v1.json&mid=48&deref=bundle"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP403-+Forbidden.v1.json&mid=40&deref=bundle"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          }
        },
        "operationId": "get-assets-repository-collect-publisher-CollectPublisher",
        "parameters": [
          {
            "in": "query",
            "name": "reconciliationMode",
            "description": "There are 3 modes to\n1) Full => it will call the SDH outbound query and will return ALL the records (external facet) known & sent by the collect publisher (e.g. ALM) with their respective internal facet.\n\n2) DELTA => It is the same service called by FULL, expect that there will be a filter applied on the result to only return records where the GoldenVersion of the Internal facet is HIGHER than the GoldenVersion of the External facet.\n\n3) DQC => It calls a specific query in SDH to only return records (external facet) known & sent by the collect publihser (e.g. ALM) that are not linked to any Golden Asset.\n\n\n",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": ""
            }
          },
          {
            "in": "query",
            "name": "publisherCode",
            "description": "Indicates the publisher code (SEAMLESS, ECOREACH, SAFEREP, ...) if\nthe consumer want to limit the result to only 1 publisher",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "resultType",
            "description": "Indicates the result type : BASIC or ALL\nBASIC by default",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "description": "if true, no details will be returned in the response, only the total\nnumber of record (number of installedProduct found as per query\nfilters)",
            "name": "countOnly",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/installed-products/track": {
      "post": {
        "responses": {
          "201": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fulfillAssetRegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request\n\nSome validations are performed in the backend. If the validation fails, backend can returns one of the following \"Bad request\"\n\nBAD_REQUEST_1  Description : Invalid product reference.\t\n  Cause : Invalid Product Reference\n\nBAD_REQUEST_2  Description :\tInvalid association of Brand, Range and Device type.\n  Cause : Invalid macro reference\n\nBAD_REQUEST_3  Description : Either Product reference or Brand details must be present in the request.\n  Cause : Product reference or macro reference not present\n\nBAD_REQUEST_4  Description : Invalid serial number.\n  Cause : should not match exclusion pattern for serial number (Test, N/A, ...)\n\nBAD_REQUEST_5  Description :\tThe value manufacturingDate is not valid. Format should be YYYY-MM-DD.\n  Cause : When we are passing invalid date in the request\n\nBAD_REQUEST_6  Description :\tProvided input in the request is invalid.\n  Cause : When we passing the values in the request beyond(exceeds) the max limit of length.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP403-+Forbidden.v1.json&mid=40&deref=bundle"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          }
        },
        "summary": "Upsert Asset information for 1 serial number",
        "tags": [
          "InstalledBase endpoint technicalSpec"
        ],
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Send Asset data for tracking purpose to MDM for processing (including DQC, duplicates detection, ...)",
        "operationId": "addUserAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fulfillAssetRegistrationRequest"
              }
            }
          },
          "x-examples": {
            "Creating asset with macro-reference": {
              "publisherCode": "SEAMLESS",
              "assetDetails": {
                "serialNumber": "SCNSERIAL_SEAMLESS_0002",
                "brandDetails": {
                  "brand": "SCHNEIDERELECTRIC",
                  "deviceType": "DEVTYP000073",
                  "range": "970"
                },
                "customerReference": "SR540x3xxx",
                "firmwareVersion": "5.0",
                "usageStatusCode": "IN_USE",
                "description": "DEVTYP000073/SCHNEIDERELECTRIC/970",
                "commissioningDate": "2019-04-09T00:00:00.000Z",
                "manufacturingDate": "2019-03-01T00:00:00.000Z",
                "uniqueDigitalId": "zerazerazer",
                "internalAssetId": "9b86ef63-0869-4c66-918e-7e2e03e133f0",
                "subRange": "SR00123",
                "goldenId": "",
                "goldenVersion": "",
                "collectPublisherCode": "ALM",
                "connectedDetails": {
                  "remoteSystem": "EAA_IT_PREMIUM",
                  "remoteAddress": "192.168.1.1",
                  "connectionType": "CLOUD",
                  "macAddress": "AE.TD.AS.XD",
                  "ipAddress": "12.178.136.13"
                },
                "linkedAsset": {
                  "serialNumber": "SCNSERIAL_SEAMLESS_0001",
                  "productReference": "LV84708",
                  "assetRange": "970",
                  "assetId": "9b86ef63-0869-4c66-918e-0000001",
                  "assetLinkType": "AS_LINK_1",
                  "assetLinkStatus": "Active"
                }
              },
              "assetAccount": {
                "siteAccount": {
                  "siteReference": {
                    "siteAccountPublisher": "BFO",
                    "siteAccountId": "001A0000015T3pCIAS"
                  },
                  "siteDetails": {
                    "accountTypeCode": "ID",
                    "businessUnitCode": "BU01",
                    "city": "Paris",
                    "countryCode": "FR",
                    "currency": "EUR",
                    "customerClass": "CC",
                    "gpsLattitude": "-0.566",
                    "gpsLongitude": "36.56",
                    "internalAccountId": "",
                    "localName": "圖爾大學 - FrançoisRabelais",
                    "marketSegment": "Business",
                    "name": "圖爾大學-Université de Tours - François Rabelais",
                    "seAccountOwnerId": "SESA379072",
                    "stateProvinceCode": "FR1",
                    "street": "Paris12",
                    "zipCode": "23456"
                  }
                },
                "userAccount": {
                  "userAccountDetails": {
                    "accountPublisher": "BFO",
                    "accountId": "0011H00001SrhYHQAZ",
                    "userRole": "ROLE_37"
                  },
                  "userDetails": {
                    "userPublisher": "BFO",
                    "loggedInUserId": "0051H000009fa8bQAA"
                  }
                }
              },
              "siteLocation": {
                "locationReference": {
                  "locationId": "03121654654",
                  "locationPublisherCode": "BFO"
                },
                "locationDetails": {
                  "locationName": "Placard à balais",
                  "locationType": "BUILD",
                  "internalLocationId": "456456464",
                  "locationParentId": "798532165464",
                  "locationParentPs": "BFO"
                }
              }
            },
            "Creating asset with commercial reference": {
              "publisherCode": "SEAMLESS",
              "assetDetails": {
                "serialNumber": "SCNSERIAL_SEAMLESS_0002",
                "productDetails": {
                  "productReferencePublisher": "",
                  "productReference": "LV850004"
                },
                "customerReference": "SR540x3xxx",
                "firmwareVersion": "5.0",
                "usageStatusCode": "IN_USE",
                "description": "DEVTYP000073/SCHNEIDERELECTRIC/970",
                "commissioningDate": "2019-04-09T00:00:00.000Z",
                "manufacturingDate": "2019-03-01T00:00:00.000Z",
                "uniqueDigitalId": "zerazerazer",
                "internalAssetId": "9b86ef63-0869-4c66-918e-7e2e03e133f0",
                "subRange": "SR00123",
                "goldenId": "",
                "goldenVersion": "",
                "collectPublisherCode": "ALM",
                "connectedDetails": {
                  "remoteSystem": "EAA_IT_PREMIUM",
                  "remoteAddress": "192.168.1.1",
                  "connectionType": "CLOUD",
                  "macAddress": "AE.TD.AS.XD",
                  "ipAddress": "12.178.136.13"
                },
                "linkedAsset": {
                  "serialNumber": "SCNSERIAL_SEAMLESS_0001",
                  "productReference": "LV84708",
                  "assetRange": "970",
                  "assetId": "9b86ef63-0869-4c66-918e-0000001",
                  "assetLinkType": "AS_LINK_1",
                  "assetLinkStatus": "Active"
                }
              },
              "assetAccount": {
                "siteAccount": {
                  "siteReference": {
                    "siteAccountPublisher": "BFO",
                    "siteAccountId": "001A0000015T3pCIAS"
                  },
                  "siteDetails": {
                    "accountTypeCode": "ID",
                    "businessUnitCode": "BU01",
                    "city": "Paris",
                    "countryCode": "FR",
                    "currency": "EUR",
                    "customerClass": "CC",
                    "gpsLattitude": "-0.566",
                    "gpsLongitude": "36.56",
                    "internalAccountId": "",
                    "localName": "圖爾大學 - FrançoisRabelais",
                    "marketSegment": "Business",
                    "name": "圖爾大學-Université de Tours - François Rabelais",
                    "seAccountOwnerId": "SESA379072",
                    "stateProvinceCode": "FR1",
                    "street": "Paris12",
                    "zipCode": "23456"
                  }
                },
                "userAccount": {
                  "userAccountDetails": {
                    "accountPublisher": "BFO",
                    "accountId": "0011H00001SrhYHQAZ",
                    "userRole": "ROLE_37"
                  },
                  "userDetails": {
                    "userPublisher": "BFO",
                    "loggedInUserId": "0051H000009fa8bQAA"
                  }
                }
              },
              "siteLocation": {
                "locationReference": {
                  "locationId": "03121654654",
                  "locationPublisherCode": "BFO"
                },
                "locationDetails": {
                  "locationName": "Placard à balais",
                  "locationType": "BUILD",
                  "internalLocationId": "456456464",
                  "locationParentId": "798532165464",
                  "locationParentPs": "BFO"
                }
              }
            }
          }
        }
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fulfillAssetRegistrationRequest"
              }
            }
          },
          "description": "Request Body",
          "required": true,
          "x-examples": {
            "Updating asset information": {
              "publisherCode": "SEAMLESS",
              "assetDetails": {
                "serialNumber": "SCNSERIAL_SEAMLESS_0002",
                "brandDetails": {
                  "brand": "SCHNEIDERELECTRIC",
                  "deviceType": "DEVTYP000073",
                  "range": "970"
                },
                "customerReference": "SR540x3xxx",
                "firmwareVersion": "5.0",
                "usageStatusCode": "IN_USE",
                "description": "DEVTYP000073/SCHNEIDERELECTRIC/970",
                "commissioningDate": "2019-04-09T00:00:00.000Z",
                "manufacturingDate": "2019-03-01T00:00:00.000Z",
                "uniqueDigitalId": "zerazerazer",
                "internalAssetId": "9b86ef63-0869-4c66-918e-7e2e03e133f0",
                "subRange": "SR00123",
                "goldenId": "0021009895",
                "goldenVersion": "597800",
                "collectPublisherCode": "ALM",
                "connectedDetails": {
                  "remoteSystem": "EAA_IT_PREMIUM",
                  "remoteAddress": "192.168.1.1",
                  "connectionType": "CLOUD",
                  "macAddress": "AE.TD.AS.XD",
                  "ipAddress": "12.178.136.13"
                },
                "linkedAsset": {
                  "serialNumber": "SCNSERIAL_SEAMLESS_0001",
                  "productReference": "LV84708",
                  "assetRange": "970",
                  "assetId": "9b86ef63-0869-4c66-918e-0000001",
                  "assetLinkType": "AS_LINK_1",
                  "assetLinkStatus": "Active"
                }
              },
              "assetAccount": {
                "siteAccount": {
                  "siteReference": {
                    "siteAccountPublisher": "BFO",
                    "siteAccountId": "001A0000015T3pCIAS"
                  },
                  "siteDetails": {
                    "accountTypeCode": "ID",
                    "businessUnitCode": "BU01",
                    "city": "Paris",
                    "countryCode": "FR",
                    "currency": "EUR",
                    "customerClass": "CC",
                    "gpsLattitude": "-0.566",
                    "gpsLongitude": "36.56",
                    "internalAccountId": "",
                    "localName": "圖爾大學 - FrançoisRabelais",
                    "marketSegment": "Business",
                    "name": "圖爾大學-Université de Tours - François Rabelais",
                    "seAccountOwnerId": "SESA379072",
                    "stateProvinceCode": "FR1",
                    "street": "Paris12",
                    "zipCode": "23456"
                  }
                },
                "userAccount": {
                  "userAccountDetails": {
                    "accountPublisher": "BFO",
                    "accountId": "0011H00001SrhYHQAZ",
                    "userRole": "ROLE_37"
                  },
                  "userDetails": {
                    "userPublisher": "BFO",
                    "loggedInUserId": "0051H000009fa8bQAA"
                  }
                }
              },
              "siteLocation": {
                "locationReference": {
                  "locationId": "03121654654",
                  "locationPublisherCode": "BFO"
                },
                "locationDetails": {
                  "locationName": "Placard à balais",
                  "locationType": "BUILD",
                  "internalLocationId": "456456464",
                  "locationParentId": "798532165464",
                  "locationParentPs": "BFO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fulfillAssetRegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request\n\nSome validations are performed in the backend. If the validation fails, backend can returns one of the following \"Bad request\"\n\nBAD_REQUEST_1  Description : Invalid product reference.\t\n  Cause : Invalid Product Reference\n\nBAD_REQUEST_2  Description :\tInvalid association of Brand, Range and Device type.\n  Cause : Invalid macro reference\n\nBAD_REQUEST_3  Description : Either Product reference or Brand details must be present in the request.\n  Cause : Product reference or macro reference not present\n\nBAD_REQUEST_4  Description : Invalid serial number.\n  Cause : should not match exclusion pattern for serial number (Test, N/A, ...)\n\nBAD_REQUEST_5  Description :\tThe value manufacturingDate is not valid. Format should be YYYY-MM-DD.\n  Cause : When we are passing invalid date in the request\n\nBAD_REQUEST_6  Description :\tProvided input in the request is invalid.\n  Cause : When we passing the values in the request beyond(exceeds) the max limit of length.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP401-Unauthorized.v1.json&mid=48&deref=bundle"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP403-+Forbidden.v1.json&mid=40&deref=bundle"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "429": {
            "description": "Too many request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          }
        },
        "summary": "Upsert Asset information for 1 serial number",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Method to update the user and asset related details.\n\nDocumentation is here : https://se-avid.stoplight.io/docs/gh1/avid-api-design/installedbase/InstalledBase.oas2.yml",
        "operationId": "updateUserAsset",
        "tags": [
          "SDH Asset tracking"
        ]
      },
      "parameters": []
    },
    "/installed-products/publishers/serial-numbers/{serial-number}/search": {
      "get": {
        "parameters": [
          {
            "description": "Represents the publisher code to restrict the result. Eg:BFO.Pass\nnull to get records from all publishers",
            "in": "query",
            "name": "publisherCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the service plan, if the requester wants to have details\nrelated to the service contract that are covering the searched\nAsset. Eg: Extended Warranty",
            "in": "query",
            "name": "servicePlan",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the result set. Default is basic (name, address,\naccountNumber, businessUnitCode etc.).",
            "in": "query",
            "name": "resultType",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "basic",
                "medium",
                "all"
              ],
              "default": "basic"
            }
          },
          {
            "in": "path",
            "name": "serial-number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Accept",
            "schema": {
              "type": "string",
              "enum": [
                "application/json"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetResultSet_OBSOLETE"
                }
              },
              "example-1": {
                "examples": {
                  "response": {
                    "value": {
                      "recordCount": 2,
                      "assets": [
                        {
                          "refurbishedFlag": "N",
                          "endOfCommercializationDate": "4000-12-31T00:00:00.000Z",
                          "serviceObsolecenseDate": "4000-12-31T00:00:00.000Z",
                          "deletionFlag": "Y",
                          "reasonForDeletion": "DUPLICATE",
                          "trackingStatus": "TRACKED",
                          "standardizedSerialNumber": "HS191630037",
                          "manufacturingDate": "2019-05-14T00:00:00.000Z",
                          "warrantyStartDate": "2019-11-14T00:00:00.000Z",
                          "warrantyEndDate": "2020-11-12T00:00:00.000Z",
                          "quantity": 1,
                          "managedInSystem": "Y",
                          "publisherCode": "BFO",
                          "id": "a1a1H00000Bot1QQAR",
                          "goldenAssetPublisher": "SDH",
                          "goldenAssetId": 81092406,
                          "referenceLink": "M",
                          "sitePublisherCode": "BFO",
                          "siteId": "VARD Electro Tulcea SRL",
                          "siteName": "RO",
                          "countryCode": "001A000000kz4SgIAI",
                          "locationPublisherCode": "BFO",
                          "locationId": "a2L1H000003NL2FUAW",
                          "description": "MTZ225H15.0X3PED",
                          "serialNumber": "HS191630037",
                          "materialPublisherCode": "BFO",
                          "materialId": "01t12000004vactAAA",
                          "catalogReference": "GCR_MTZ2_CB"
                        },
                        {
                          "refurbishedFlag": "N",
                          "endOfCommercializationDate": "4000-12-31T00:00:00.000Z",
                          "serviceObsolecenseDate": "4000-12-31T00:00:00.000Z",
                          "deletionFlag": "N",
                          "trackingStatus": "TRACKED",
                          "standardizedSerialNumber": "HS191630037",
                          "manufacturingDate": "2019-05-14T00:00:00.000Z",
                          "warrantyStartDate": "2019-11-14T00:00:00.000Z",
                          "warrantyEndDate": "2020-11-12T00:00:00.000Z",
                          "quantity": 0,
                          "managedInSystem": "Y",
                          "publisherCode": "BFO",
                          "id": "a1a1H00000EOkGnQAL",
                          "goldenAssetPublisher": "SDH",
                          "goldenAssetId": 81092406,
                          "sitePublisherCode": "BFO",
                          "siteId": "VARD Electro Tulcea SRL",
                          "siteName": "RO",
                          "countryCode": "001A000000kz4SgIAI",
                          "locationPublisherCode": "BFO",
                          "locationId": "a2L1H000003NL2FUAW",
                          "description": "VAE1-Q1 Emergency Generator",
                          "serialNumber": "HS191630037",
                          "categoryId": 63545,
                          "deviceType": "DEVTYP000047",
                          "brand": "SCHNEIDERELECTRIC",
                          "subCategory": "SR0642"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP401-Unauthorized.v1.json&mid=48&deref=bundle"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP403-+Forbidden.v1.json&mid=40&deref=bundle"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/FieldService-errorResponse-HTTP400-Bad-Request.v1.json&mid=39&deref=bundle"
                }
              }
            }
          }
        },
        "summary": "Retrieve asset by serial number",
        "tags": [
          "InstalledBase endpoint technicalSpec"
        ],
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Retrieve list of asset matching the serial number : multiple pattern as defined by Supply Chain used by matching (Regex)",
        "operationId": "getAsset"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "serial-number",
          "in": "path",
          "required": true
        }
      ]
    },
    "/installed-products/search": {
      "parameters": [],
      "post": {
        "summary": "Search internal facet of the installed based for a list of installed at accounts",
        "operationId": "search-installed-products-internal-facet",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "installedAtAccounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountDetails": {
                                "$ref": "../models/account.v1.json"
                              },
                              "locationsTotal": {
                                "type": "integer"
                              },
                              "locations": {
                                "type": "array",
                                "items": {
                                  "$ref": "../models/location.v1.yaml"
                                }
                              }
                            }
                          }
                        },
                        "page": {
                          "type": "integer"
                        },
                        "pageSize": {
                          "type": "integer"
                        }
                      }
                    },
                    {
                      "properties": {
                        "numberOfRecords": {
                          "type": "integer"
                        }
                      }
                    }
                  ],
                  "type": "object"
                },
                "examples": {
                  "Basic Use Case - Full Response": {
                    "value": [
                      {
                        "locations": [
                          {
                            "installedProducts": [
                              {
                                "assetDetails": {
                                  "": {
                                    "assetDescription": "string",
                                    "connectedAttributes": {
                                      "connected": "true"
                                    },
                                    "underContract": "ture",
                                    "customerAssetReferences": {
                                      "customerAssetDescription": "BREAKER-XAZE",
                                      "customerAssetReference": "123456",
                                      "customerAssetSerialNumber": "00003N1905510108"
                                    },
                                    "serialNumber": "ZA0735003884",
                                    "standardSerialNumber": "to be defined",
                                    "installationDate": "2014-07-01",
                                    "manufacturingDate": "2017-01-01",
                                    "note": "This is an example of note",
                                    "shipDate": "2019-04-17",
                                    "trackingStatus": "TRACKED",
                                    "version": "5",
                                    "warrantyCode": "NA",
                                    "warrantyEndDate": "2022-02-30",
                                    "warrantyStartDate": "2018-02-30",
                                    "withdrawalDate": "2018-02-30",
                                    "assetId": "string",
                                    "parentAssetId": "string",
                                    "estimatedEndOfLifeDate": "2020-04-20",
                                    "purchasedDate": "2020-04-20",
                                    "decommissioningDate": "2020-04-20",
                                    "usageStatus": "string",
                                    "assetBfoId": "string",
                                    "firmwareVersion": "string"
                                  }
                                },
                                "productDetails": {
                                  "": {
                                    "endOfLifeDate": "2014-07-01",
                                    "endOfCommercialisationDate": "2014-07-01",
                                    "subRange": "string",
                                    "deviceType": "DEVTYP000174",
                                    "range": "63545",
                                    "brand": "string",
                                    "schneiderCommercialReference": "string",
                                    "GDP": "string",
                                    "productLine": "string",
                                    "serviceable": true,
                                    "connectable": "<Empty>",
                                    "serviceObsolecenseDate": "2020-04-20",
                                    "endOfServiceDate": "2020-04-20",
                                    "fieldServiceBU": "string"
                                  }
                                }
                              }
                            ],
                            "installedProductsTotal": 0
                          }
                        ],
                        "locationsTotal": 0
                      }
                    ]
                  },
                  "countOnly": {
                    "value": {
                      "numberOfRecords": "10"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/400 - Bad Request"
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/401 - Unauthorized"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/403 - Forbidden"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/404 - Not Found"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/429 - Too Many Requests"
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/500 - Internal Server Error"
              }
            }
          }
        },
        "description": "Fetch installedbased information based on a list of installed@ accounts and render it a flat structure with relevant information for display in a treeview mode",
        "parameters": [
          {
            "in": "query",
            "name": "pageSize",
            "description": "for pagination at installed Product level",
            "schema": {
              "format": "int32",
              "default": 50,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "for pagination at installed Product level",
            "schema": {
              "type": "integer",
              "default": 1,
              "format": "int32"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "installedProductDetails",
            "description": "Basic (only basic information on the installed product) or Full (basic plus extended information). Relevant only when IP selected in expandable informations."
          },
          {
            "in": "query",
            "name": "sortingBy",
            "description": "Field on which the sorting is done",
            "schema": {
              "type": "string",
              "default": "serviceObsolescenceDate"
            }
          },
          {
            "in": "query",
            "name": "sortingOrder",
            "description": "ASC or DESC",
            "schema": {
              "type": "string",
              "default": "ASC"
            }
          },
          {
            "in": "query",
            "name": "countOnly",
            "description": "if true, no details will be returned in the response, only the total number of record (number of installedProduct found as per query filters)",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "keyWord",
            "description": "used for full text search. Will search within bellow fields if contains :\n- Asset name​\n- Serial Number\n- Customer Asset Name"
          }
        ],
        "tags": [
          "EndPoints technical specifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "installedAtAccountIds": {
                    "type": "array",
                    "uniqueItems": false,
                    "minItems": 1,
                    "items": {
                      "type": "string"
                    }
                  },
                  "locationId": {
                    "type": "array",
                    "description": "bFS Id of a location. If empty no filtering.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "underContract": {
                    "type": "string",
                    "description": "true means the Installed Product is covered at least by one contract. If empty take all. Relevant only when IP selected in expandable informations."
                  },
                  "serviceObsolescenceDate": {
                    "type": "string",
                    "description": "date of the Product Withdrawal Process for Gate C = End Services. Relevant only when IP selected in expandable informations."
                  },
                  "warrantyEndDate": {
                    "type": "string",
                    "description": "end date of the warranty for the asset. Relevant only when IP selected in expandable informations."
                  },
                  "connectedOnly": {
                    "type": "string",
                    "description": "Identify wheter the assets is connected through a digital offer (from « on premise » to cloud based) or NOT. If empty take all. Relevant only when IP selected in expandable informations."
                  },
                  "serviceableOnly": {
                    "type": "string",
                    "description": "If empty take all. Relevant only when IP selected in expandable informations."
                  },
                  "endOfcommercialisationDate": {
                    "type": "string"
                  },
                  "productBusinessUnits": {
                    "type": "array",
                    "description": "Product Business Units Codes",
                    "items": {}
                  },
                  "serviceObsolescenceDateOperator": {
                    "type": "string",
                    "enum": [
                      "<=",
                      ">=",
                      "<",
                      ">",
                      "="
                    ],
                    "description": "comparison operator for serviceObsolescenceDate criteria"
                  },
                  "warrantyEndDateOperator": {
                    "type": "string",
                    "description": "comparison operator forw warrantyEndDate criteria",
                    "enum": [
                      ">=",
                      "<=",
                      "=",
                      "<",
                      ">"
                    ]
                  },
                  "endOfcommercialisationDateOperator": {
                    "type": "string",
                    "description": "comparison operator for endOfcommericalisationDate criteria",
                    "enum": [
                      ">",
                      "<",
                      "=",
                      ">=",
                      "<="
                    ]
                  },
                  "decommissioningDate": {
                    "type": "string"
                  },
                  "decommissioningDateOperator": {
                    "type": "string",
                    "enum": [
                      "<=",
                      "<",
                      "=",
                      ">=",
                      ">="
                    ]
                  },
                  "lifeCycleStatus": {
                    "enum": [
                      "Scrapped",
                      "In Supply Chain",
                      "At Customer Location - Not Used",
                      "Commissioned / In User",
                      "Removed for Repair",
                      "Lost or Stolen"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "installedAtAccountIds"
                ]
              }
            }
          },
          "description": "List of Install@ accounts Id (bFO IDs)"
        }
      }
    },
    "/installed-products/contacts/sites": {
      "parameters": [],
      "get": {
        "summary": "Get sites by contact",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "pageSize": {
                          "type": "integer"
                        },
                        "sites": {
                          "type": "array",
                          "items": {
                            "$ref": "../models/Site results.v1.json"
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "\"numberOfRecords\" ": {
                          "type": "integer"
                        }
                      }
                    }
                  ],
                  "type": "object"
                },
                "examples": {
                  "example-with-stef-account": {
                    "value": [
                      {
                        "name": "stef",
                        "relatedInstalledAtAccount": {
                          "name": "stef account",
                          "bfoId": "1234567"
                        },
                        "bfoId": "",
                        "serviceRoles": [
                          "role1",
                          "role2",
                          "role3"
                        ]
                      },
                      {
                        "name": "stef2",
                        "relatedInstalledAtAccount": {
                          "name": "stef account 2",
                          "bfoId": "ABCDFEF"
                        },
                        "bfoId": "",
                        "serviceRoles": [
                          "role10",
                          "role20",
                          "role30"
                        ]
                      }
                    ]
                  },
                  "BFO SIT - sample 1": {
                    "value": {
                      "page": 1,
                      "pageSize": 20,
                      "sites": [
                        {
                          "locationName": "YSAO Location1",
                          "locationType": "SITE",
                          "locationBfoId": "a2LJ0000003KoukMAC",
                          "relatedInstalledAtAccount": {
                            "accountName": "YSAO Account1",
                            "accountBfoId": "001J000002M0DpbIAF",
                            "accountGoldenId": null
                          },
                          "serviceRoles": []
                        },
                        {
                          "locationName": "TEST",
                          "locationType": "BUILD",
                          "locationBfoId": "a2LJ0000003Kp76MAC",
                          "relatedInstalledAtAccount": {
                            "accountName": "YSAO Account1",
                            "accountBfoId": "001J000002M0DpbIAF",
                            "accountGoldenId": null
                          },
                          "serviceRoles": [
                            {
                              "roleName": "Service Role-29689866",
                              "roleBfoId": "a7MJ0000000KfpHMAS"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "countOnly": {
                    "value": {
                      "numberOfRecords": "10"
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/400 - Bad Request"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/401 - Unauthorized"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/403 - Forbidden"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/404 - Not Found"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/429 - Too Many Requests"
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/500 - Internal Server Error"
              }
            }
          }
        },
        "operationId": "get-sites-contactID",
        "parameters": [
          {
            "type": "integer",
            "in": "query",
            "name": "pageSize",
            "description": "for pagination (number of site records)",
            "format": "int32",
            "default": 50,
            "maximum": 2000,
            "schema": {
              "type": "integer"
            }
          },
          {
            "type": "integer",
            "in": "query",
            "name": "page",
            "description": "for pagination (number of sites records)",
            "format": "int32",
            "default": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "type": "string",
            "in": "query",
            "name": "contactID",
            "description": "bFO contact ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "in": "query",
            "name": "countOnly",
            "description": "if true, no details will be returned in the response, only the total number of record (number of sites found as per query filters)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EndPoints technical specifications"
        ],
        "description": "Fetch a list of sites a contact is linked to through service roles"
      }
    },
    "/installed-products/locations/search": {
      "parameters": [],
      "post": {
        "summary": "Search list of internal facet of locations linked to installed at accounts",
        "operationId": "search-location-internal-facet",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "pageSize": {
                          "type": "integer"
                        },
                        "installedAtAccounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountDetails": {
                                "$ref": "../models/account.v1.json"
                              },
                              "locationsTotal": {
                                "type": "string"
                              },
                              "locations": {
                                "type": "array",
                                "items": {
                                  "$ref": "../models/Location-without-IP.v1.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "properties": {
                        "numberOfRecords": {
                          "type": "integer"
                        }
                      }
                    }
                  ],
                  "type": "object"
                },
                "examples": {
                  "Basic Use Case - Full Reponse": {
                    "value": {
                      "pageSize": 50,
                      "page": 1,
                      "installedAtAccounts": [
                        {
                          "locationsTotal": 1,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "Test Account Manish - SITE",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003LO4FMAW",
                                "address": {
                                  "zipcode": "560037",
                                  "street": "Kundanahalli Road Marathahalli",
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Bengaluru East",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": null,
                            "name": "Test Account Manish",
                            "billingAddress": {
                              "zipcode": null,
                              "street": "Kundanahalli Road Marathahalli",
                              "state": "10",
                              "language": null,
                              "country": "IN",
                              "city": "Bengaluru East",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "001J000002M9LrjIAF",
                            "address": {
                              "zipcode": "560037",
                              "street": "Kundanahalli Road Marathahalli",
                              "state": "a0I5C0000021ti4UAA",
                              "language": null,
                              "country": "a0H5C0000038j1wUAA",
                              "city": "Bengaluru East",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": null
                          }
                        },
                        {
                          "locationsTotal": 1,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "ATP china",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003LHZiMAO",
                                "address": {
                                  "zipcode": "000BJ",
                                  "street": "3rd street",
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Beijing",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": null,
                            "name": "ATP china",
                            "billingAddress": {
                              "zipcode": null,
                              "street": "3rd street",
                              "state": "091",
                              "language": null,
                              "country": "CN",
                              "city": "Beijing",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "001J000002OotRmIAJ",
                            "address": {
                              "zipcode": "000BJ",
                              "street": "3rd street",
                              "state": "a0I5C0000021u03UAA",
                              "language": null,
                              "country": "a0H5C0000038j3UUAQ",
                              "city": "Beijing",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": null
                          }
                        },
                        {
                          "locationsTotal": 1,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "test1232location",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003L4zcMAC",
                                "address": {
                                  "zipcode": "560103",
                                  "street": "Kadubeesanahalli",
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Bangalore",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": null,
                            "name": "SETest1234Acc",
                            "billingAddress": {
                              "zipcode": null,
                              "street": "Kadubeesanahalli",
                              "state": null,
                              "language": null,
                              "country": "FR",
                              "city": "Bangalore",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "001J000002MS7J2IAL",
                            "address": {
                              "zipcode": "560103",
                              "street": "Kadubeesanahalli",
                              "state": null,
                              "language": null,
                              "country": "a0H5C0000038j3qUAA",
                              "city": "Bangalore",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": "543345"
                          }
                        },
                        {
                          "locationsTotal": 1,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "Test Location",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003KvwLMAS",
                                "address": {
                                  "zipcode": "2233",
                                  "street": "11 Test street",
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Paris",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": null,
                            "name": "CTI_Test_?ÖÜÓÁÉÍ?",
                            "billingAddress": {
                              "zipcode": null,
                              "street": null,
                              "state": null,
                              "language": null,
                              "country": null,
                              "city": null,
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "0015C00000TvNNJQA3",
                            "address": {
                              "zipcode": "2233",
                              "street": "11 Test street",
                              "state": null,
                              "language": null,
                              "country": "a0H5C0000038j3qUAA",
                              "city": "Paris",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": null
                          }
                        },
                        {
                          "locationsTotal": 1,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "DONT KNOW",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003KgJxMAK",
                                "address": {
                                  "zipcode": "560066",
                                  "street": "Whitefield",
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Bangalore",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": "001J000002OzK5RIAV",
                            "name": "TestSs",
                            "billingAddress": {
                              "zipcode": null,
                              "street": "TEST",
                              "state": "010",
                              "language": null,
                              "country": "CN",
                              "city": "BEIJING",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "001J000002LY69pIAD",
                            "address": {
                              "zipcode": "100006",
                              "street": "TEST",
                              "state": "a0I5C0000021tZCUAY",
                              "language": null,
                              "country": "a0H5C0000038j3UUAQ",
                              "city": "BEIJING",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": null
                          }
                        },
                        {
                          "locationsTotal": 1,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "test Location for api",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003LMc3MAG",
                                "address": {
                                  "zipcode": "560103",
                                  "street": null,
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Bangalore",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": null,
                            "name": "test sites api",
                            "billingAddress": {
                              "zipcode": null,
                              "street": null,
                              "state": null,
                              "language": null,
                              "country": "IN",
                              "city": "Bangalore",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "001J000002OzK5RIAV",
                            "address": {
                              "zipcode": "560103",
                              "street": null,
                              "state": null,
                              "language": null,
                              "country": "a0H5C0000038j1wUAA",
                              "city": "Bangalore",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": null
                          }
                        },
                        {
                          "locationsTotal": 2,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "ROOM",
                                "locationParentBfoId": "a2LJ0000003KoukMAC",
                                "locationName": "TEST",
                                "locationFunction": "LOC_FUNC_2",
                                "locationBfoId": "a2LJ0000003Kp76MAC",
                                "address": {
                                  "zipcode": "92370",
                                  "street": null,
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Paris",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            },
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "YSAO Location1",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003KoukMAC",
                                "address": {
                                  "zipcode": "92370",
                                  "street": null,
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Paris",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": null,
                            "name": "YSAO Account1",
                            "billingAddress": {
                              "zipcode": null,
                              "street": null,
                              "state": "92",
                              "language": null,
                              "country": "FR",
                              "city": "Paris",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "001J000002M0DpbIAF",
                            "address": {
                              "zipcode": "92370",
                              "street": null,
                              "state": "a0I5C0000021tdJUAQ",
                              "language": null,
                              "country": "a0H5C0000038j3qUAA",
                              "city": "Paris",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": null
                          }
                        },
                        {
                          "locationsTotal": 1,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "TestCSAPrpject - SITE",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003LLBJMA4",
                                "address": {
                                  "zipcode": "560016",
                                  "street": "Sarjapur Marathalli Outer Ring Road Mahadevapura",
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Bengaluru East",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": null,
                            "name": "TestCSAPrpject",
                            "billingAddress": {
                              "zipcode": null,
                              "street": "Sarjapur Marathalli Outer Ring Road Mahadevapura",
                              "state": "10",
                              "language": null,
                              "country": "IN",
                              "city": "Bengaluru East",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "001J000002MS7AjIAL",
                            "address": {
                              "zipcode": "560016",
                              "street": "Sarjapur Marathalli Outer Ring Road Mahadevapura",
                              "state": "a0I5C0000021ti4UAA",
                              "language": null,
                              "country": "a0H5C0000038j1wUAA",
                              "city": "Bengaluru East",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": null
                          }
                        },
                        {
                          "locationsTotal": 1,
                          "locations": [
                            {
                              "locationDetails": {
                                "siteSpecificComments": null,
                                "sitePhone": null,
                                "locationType": "SITE",
                                "locationParentBfoId": null,
                                "locationName": "VJ SE Location",
                                "locationFunction": null,
                                "locationBfoId": "a2LJ0000003KYWzMAO",
                                "address": {
                                  "zipcode": "560103",
                                  "street": "Kadubeesanahalli",
                                  "state": null,
                                  "language": null,
                                  "country": null,
                                  "city": "Bangalore",
                                  "businessName": null,
                                  "additionalLine": null
                                }
                              }
                            }
                          ],
                          "accountDetails": {
                            "schneiderId": null,
                            "parentBfoId": null,
                            "name": "VJ SE Account Partner",
                            "billingAddress": {
                              "zipcode": null,
                              "street": "Kadubeesanahalli",
                              "state": "10",
                              "language": null,
                              "country": "IN",
                              "city": "Bangalore",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "bfoId": "001J000002LBQH7IAP",
                            "address": {
                              "zipcode": "560103",
                              "street": "Kadubeesanahalli",
                              "state": "a0I5C0000021ti4UAA",
                              "language": null,
                              "country": "a0H5C0000038j1wUAA",
                              "city": "Bangalore",
                              "businessName": null,
                              "additionalLine": null
                            },
                            "accountNumber": null
                          }
                        }
                      ]
                    }
                  },
                  "countOnly": {
                    "value": {
                      "numberOfRecords": "10"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/400 - Bad Request"
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/401 - Unauthorized"
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/403 - Forbidden"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/404 - Not Found"
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/429 - Too Many Requests"
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/500 - Internal Server Error"
              }
            }
          }
        },
        "description": "Fetch location information based on a list of installed@ accounts and render it a flat structure with relevant information for display in a treeview mode",
        "parameters": [
          {
            "type": "integer",
            "in": "query",
            "name": "pageSize",
            "description": "for pagination (number of location records)",
            "default": 50,
            "format": "int32",
            "schema": {
              "type": "integer"
            }
          },
          {
            "type": "integer",
            "in": "query",
            "name": "page",
            "description": "for pagination (number of location records)",
            "default": 1,
            "format": "int32",
            "schema": {
              "type": "integer"
            }
          },
          {
            "type": "string",
            "in": "query",
            "name": "sortingBy",
            "description": "Field on which the sorting is done. Default is on locationName\n\n\n\n",
            "default": "serviceObsolescenceDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "in": "query",
            "name": "sortingOrder",
            "description": "ASC or DESC",
            "default": "ASC",
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "countOnly",
            "description": "if true, no details will be returned in the response, only the total number of record (number of installedProduct found as per query filters)",
            "default": "false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "https://se-avid.stoplight.io/common-libs?0=common-libs&srn=gh1/avid-api-design/fieldservice-common/models/FieldService-SearchOptions.v1.json"
          },
          {
            "type": "string",
            "in": "query",
            "name": "keyWord",
            "description": "used for full text search. Will search within bellow fields if contains :\n- Location name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EndPoints technical specifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "installedAtAccountIds": {
                    "type": "array",
                    "uniqueItems": false,
                    "minItems": 1,
                    "items": {
                      "type": "string"
                    }
                  },
                  "locationId": {
                    "type": "string",
                    "description": "bFS Id of a location. If empty no filtering."
                  },
                  "serviceRole": {
                    "type": "string",
                    "description": "Service role linking contact to the site"
                  }
                },
                "required": [
                  "installedAtAccountIds"
                ]
              }
            }
          },
          "description": "List of Install@ accounts Id (bFO IDs)"
        }
      }
    },
    "/installed-products/opportunity-lines/associate": {
      "post": {
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "description": "Former bfo-InstalledProducts API",
        "parameters": [],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installedProductsResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "installedProductsResponse": {
                        "result": {
                          "created": false,
                          "id": "aGVg0000000EuGOGA0",
                          "success": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/400 - Bad Request",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/401 - Unauthorized",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/403 - Forbidden",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/404 - Not Found",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/429 - Too Many Requests",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/500 - Internal Server Error",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          }
        },
        "summary": "method to associate Install products on the opportunity line.",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "tags": [
          "EndPoints technical specifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/installedProductsRequest"
              },
              "examples": {
                "example-1": {
                  "value": {
                    "installedProductId": "a1ag0000008KJ3bAAG",
                    "opportunityLineId": "a0Wg0000005l8W2EAI"
                  }
                }
              }
            }
          },
          "description": "List of Install@ accounts Id (bFO IDs)"
        },
        "operationId": "associateopportunity-lines"
      },
      "parameters": []
    },
    "/deprecated/search": {
      "get": {
        "parameters": [
          {
            "description": "Represents the serialNumber",
            "in": "query",
            "name": "serialNumber",
            "required": false,
            "type": "string",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the digitalID",
            "in": "query",
            "name": "digitalID",
            "required": false,
            "type": "string",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the Asset Golden ID",
            "in": "query",
            "name": "assetGoldenId",
            "required": false,
            "type": "string",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Represents the installed Product Id. If this parameter is passed with other params in query then the search will be only with installedProductId",
            "in": "query",
            "name": "installedProductId",
            "required": false,
            "type": "string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/records_DEPRECATED"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/400 - Bad Request",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/401 - Unauthorized",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/403 - Forbidden",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/404 - Not Found",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/429 - Too Many Requests",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml#/components/responses/500 - Internal Server Error",
                "schema": {
                  "$ref": "#/components/schemas/error_DEPRECATED"
                }
              }
            }
          }
        },
        "summary": "Retrieves an installed product ID details from bFO.",
        "tags": [
          "Deprecated - former BFO-InstalledProducts"
        ],
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "@@Deprecated operation\nFormer bfo-InstalledProducts API",
        "operationId": "searchInstalledBase"
      }
    },
    "/deprecated/accounts/{accountid}/installedbase": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "productBrand",
            "type": "array",
            "description": "Product Brand\nA maximum of 10 Product Brand values can be passed ",
            "items": {
              "type": "string"
            },
            "schema": {
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "productDeviceType",
            "type": "array",
            "description": "Product Device Type\nA maximum of 10 Product Brand values can be passed ",
            "items": {
              "type": "string"
            },
            "schema": {
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "productRange",
            "type": "array",
            "description": "Product Range\nA maximum of 10 Product Brand values can be passed ",
            "items": {
              "type": "string"
            },
            "schema": {
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "productSubrange",
            "type": "array",
            "description": "Product SubRange\nA maximum of 10 Product Brand values can be passed ",
            "items": {
              "type": "string"
            },
            "schema": {
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "locationsNextToken",
            "type": "string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "installedProductsNextToken",
            "type": "string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInstalledBase_DEPRECATED"
                }
              }
            },
            "description": "Account is found and returned"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          }
        },
        "x-throttling-tier": "Unlimited",
        "summary": "Retrieves the installed base details for a given account @ DEPRECATED",
        "x-auth-type": "Application & Application User",
        "produces": [
          "application/json"
        ],
        "x-scope": "",
        "description": "@Deprecated operation\nFormer bFS-InstalledBase /get for IB2Diag\nRetrieves the installed base details for a given account",
        "operationId": "getInstalledBase",
        "tags": [
          "Deprecated - former bFS-InstalledBased"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "accountid",
          "in": "path",
          "required": true
        }
      ]
    },
    "/installed-products": {
      "post": {
        "summary": "Creates up to 200 Installed products",
        "x-auth-type": "Application & Application User",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Processing-Mode",
            "type": "string",
            "enum": [
              "atomic",
              "best-effort"
            ],
            "default": "best-effort",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleResponse_DEPRECATED"
                },
                "examples": {
                  "success": {
                    "value": [
                      {
                        "id": "a1ag0000008J2rzAAC",
                        "success": true,
                        "errors": []
                      }
                    ]
                  }
                }
              }
            },
            "description": "Upon successful creation of InstalledProducts, the API returns a 200 OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          }
        },
        "x-throttling-tier": "Unlimited",
        "consumes": [
          "application/json"
        ],
        "description": "Former bfs-InstalledBase API\ncreates up to 200 Installed products",
        "operationId": "CreateInstalledProduct",
        "tags": [
          "EndPoints technical specifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstalledProductCreate_DEPRECATED"
              }
            }
          },
          "description": "The structure of Installed Products Create call"
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "Processing-Mode",
            "type": "string",
            "enum": [
              "atomic",
              "best-effort"
            ],
            "default": "best-effort",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleResponse_DEPRECATED"
                },
                "examples": {
                  "success": {
                    "value": [
                      {
                        "id": "a1ag0000008KJ3bAAG",
                        "success": true,
                        "errors": []
                      }
                    ]
                  }
                }
              }
            },
            "description": "Upon successful updates of InstalledProducts, the API returns a 200 OK"
          },
          "400": {
            "description": "Request is invalid and cannot be processed due one or more issues such as syntax errors, missing required fields, out of range values, conflicting query parameters, or unknown URI.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "401": {
            "description": "The client is not authorized to perform this request because its identity has not yet been established, or the token is invalid or has expired.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have permission to perform the requested action e.g. POST or DELETE.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "415": {
            "description": "Request is invalid and cannot be processed due one or more issues such as syntax errors, missing required fields, out of range values, conflicting query parameters, or unknown URI.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "429": {
            "description": "Number of requests has exceeded the client's rate limits.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "500": {
            "description": "Requested operation encountered an unexpected server error.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          }
        },
        "summary": "Updates up to 200 Installed products",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "description": "Updates up to 200 Installed products",
        "operationId": "UpdateInstalledProduct",
        "tags": [
          "EndPoints technical specifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InstalledProductUpdate_DEPRECATED"
                }
              }
            }
          },
          "description": "Installed Products Update structure"
        }
      },
      "parameters": []
    },
    "/installed-products/locations": {
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Processing-Mode",
            "type": "string",
            "enum": [
              "atomic",
              "best-effort"
            ],
            "default": "best-effort",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleResponse_DEPRECATED"
                }
              }
            },
            "description": "If the request is well formed, the API returns a 201 OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          }
        },
        "summary": " Creates up to 200 Locations",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "description": "Former bfs-InstalledBase API\nCreates up to 200 Locations",
        "operationId": "CreateLocation",
        "tags": [
          "EndPoints technical specifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LocationCreate_DEPRECATED"
                }
              },
              "examples": {
                "successful request": {
                  "value": {
                    "locationName": "Test-Site-stef",
                    "account": {
                      "id": "001A00000190oTpIAI",
                      "name": "Babcock & Wilcox"
                    },
                    "onsiteRefId": "Ref-123-stef",
                    "rank": 12.09,
                    "city": "West Palm Beach",
                    "country": "USA",
                    "locationType": "BUILD",
                    "siteFax": "+91 562",
                    "sitePhone": "+91 9009090909",
                    "state": "FL",
                    "street": "6501 N Jog Rd",
                    "zip": "678909",
                    "technicalAttributePart1": "Parts",
                    "toDelete": true,
                    "ventilation": "Natural convection",
                    "airConditioning": "Centralised air cond system",
                    "locationFunction": "Office",
                    "parentId": "a2LA0000000yTzqMAE",
                    "recordTypeId": "012A0000000ncnYIAQ",
                    "addressLine2": "where does it go ?",
                    "locationTechnicalCharacteristics": "Technical details",
                    "email": "joe@xxx.com",
                    "siteSpecificComments": "here my comments",
                    "stateProvince": "",
                    "technicalCountryName": "US",
                    "technicalCreateFromWS": false
                  }
                }
              }
            }
          },
          "description": "Model defining the Locations Create structure"
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "Processing-Mode",
            "type": "string",
            "enum": [
              "atomic",
              "best-effort"
            ],
            "default": "best-effort",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipleResponse_DEPRECATED"
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": "a2Lg0000000l14TEAQ",
                        "success": true,
                        "errors": []
                      },
                      {
                        "success": false,
                        "errors": [
                          {
                            "statusCode": "MALFORMED_ID",
                            "message": "Record ID: id value of incorrect type: 12",
                            "fields": [
                              "Id"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "description": "If the request is well formed, the API returns a 200 OK",
            "examples": {
              "null": [
                {
                  "id": "a2Lg0000000l14TEAQ",
                  "success": true,
                  "errors": []
                },
                {
                  "success": false,
                  "errors": [
                    {
                      "statusCode": "MALFORMED_ID",
                      "message": "Record ID: id value of incorrect type: 12",
                      "fields": [
                        "Id"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "400": {
            "description": "Request is invalid and cannot be processed due one or more issues such as syntax errors, missing required fields, out of range values, conflicting query parameters, or unknown URI.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "401": {
            "description": "The client is not authorized to perform this request because its identity has not yet been established, or the token is invalid or has expired.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have permission to perform the requested action e.g. POST or DELETE.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "415": {
            "description": "Request is invalid and cannot be processed due one or more issues such as syntax errors, missing required fields, out of range values, conflicting query parameters, or unknown URI.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "429": {
            "description": "Number of requests has exceeded the client's rate limits.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          },
          "500": {
            "description": "Requested operation encountered an unexpected server error.",
            "schema": {
              "type": "object",
              "title": "Error Response",
              "description": "Error response returned to the consumer when an HTTP error status has occurred.",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "MISSING_FIELD or 12345",
                  "description": "Service-defined error code which may be numeric or a string.\n\nErrors detected by the APIM platform result in the following codes.\n\nBAD_REQUEST (for 400)\nUNAUTHORIZED (for 401)\nFORBIDDEN (for 403)\nNOT_FOUND (for 404)\nGONE (for 410)\nPRECONDITION_FAILED (for 412)\nTOO_MANY_REQUESTS (for 429)\nINTERNAL_SERVER_ERROR (for 500)\nNOT_IMPLEMENTED (for 501)\n\nAny specific service validation errors would replace BAD_REQUEST."
                },
                "userMessage": {
                  "type": "string",
                  "example": "Required field is missing: productSku",
                  "description": "Human-readable description of the error with hints about how to fix it."
                },
                "developerMessage": {
                  "type": "string",
                  "description": "Optional human-readable description of the error, meaningful to a developer.",
                  "example": "Product master API ParseException: required tag <sku> expected"
                },
                "moreInfo": {
                  "type": "string",
                  "description": "Optional link to error documentation, which has more information about the error.",
                  "format": "uri",
                  "example": "https://example.com/product-master/v1/error/12345"
                }
              },
              "required": [
                "code",
                "userMessage"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/common-resources/common.oas3.yml/components/schemas/errorResponse&mid=67&deref=bundle"
                }
              }
            }
          }
        },
        "summary": "Updates up to 200 Locations",
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "description": "Updates up to 200 Locations",
        "operationId": "UpdateLocations",
        "tags": [
          "EndPoints technical specifications"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LocationUpdate_DEPRECATED"
                }
              },
              "examples": {
                "successful request": {
                  "value": {
                    "locationName": "Test-Site-stef",
                    "account": {
                      "id": "001A00000190oTpIAI",
                      "name": "Babcock & Wilcox building"
                    },
                    "onsiteRefId": "Ref-123-stef",
                    "rank": 12.09,
                    "city": "West Palm Beach",
                    "country": "USA",
                    "locationType": "BUILD",
                    "siteFax": "+91 562",
                    "sitePhone": "+91 9009090909",
                    "state": "FL",
                    "street": "6501 N Jog Rd",
                    "zip": "678909",
                    "technicalAttributePart1": "Parts",
                    "toDelete": true,
                    "ventilation": "Natural convection",
                    "airConditioning": "Centralised air cond system",
                    "locationFunction": "Office",
                    "parentId": "a2LA0000000yTzqMAE",
                    "recordTypeId": "012A0000000ncnYIAQ",
                    "addressLine2": "where does it go ?",
                    "locationTechnicalCharacteristics": "Technical details",
                    "email": "joe@xxx.com",
                    "siteSpecificComments": "here my comments",
                    "stateProvince": "",
                    "technicalCountryName": "US",
                    "technicalCreateFromWS": false,
                    "locationId": "a2Lg0000000X0khEAC"
                  }
                }
              }
            }
          },
          "description": "Model defining the Locations Update structure"
        }
      },
      "parameters": []
    },
    "/Installed-products/asset-details": {
      "get": {
        "summary": "Get installed product details base on Id/goldenId/uniqueIbfield",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/Field-Services-Installed-Product-Basic-structure.v1.json&mid=91&deref=bundle"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-Installed-products-asset-details",
        "description": "Gets installed Products details based on Product Range/ Serial Number / Id / Golden Id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "properties": {
                      "digitalId": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "properties": {
                      "productBrand": {
                        "type": "string"
                      },
                      "productDeviceType": {
                        "type": "string"
                      },
                      "productRange": {
                        "type": "string"
                      },
                      "serialNumber": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "properties": {
                      "goldenId": {
                        "type": "string"
                      }
                    }
                  }
                ],
                "type": "object"
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "text/html": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "parameters": []
      }
    }
  },
  "components": {
    "schemas": {
      "asset": {
        "type": "object",
        "properties": {
          "acceptanceDate": {
            "description": "Represents the Acceptance date",
            "type": "string"
          },
          "acceptanceGroup": {
            "description": "Represents the Acceptance Group",
            "type": "string"
          },
          "assetCustomCode": {
            "description": "Represents the Customs code of the asset",
            "type": "string"
          },
          "assetFirmwareVersion": {
            "description": "Represents the Asset firmware version",
            "type": "string"
          },
          "assetIpAddress": {
            "description": "Represents the Asset  IP adress",
            "type": "string"
          },
          "assetMACAddress": {
            "description": "Represents the Asset MAC adress",
            "type": "string"
          },
          "brand": {
            "description": "Represents the brand of the asset",
            "type": "string"
          },
          "catalogReference": {
            "description": "Represents the Commercial Reference of the Material (or SKU)",
            "type": "string"
          },
          "categoryId": {
            "description": "Represents the category id",
            "type": "string"
          },
          "connectedFlag": {
            "description": "Represents Flag connected Asset",
            "type": "string"
          },
          "contractLinePrice": {
            "description": "Represents the Contract line Price in EUR (using exchange Rate)",
            "type": "string"
          },
          "contractPrice": {
            "description": "Represents the Contract Price in EUR (using exchange Rate)",
            "type": "string"
          },
          "countryCode": {
            "description": "Represents the Country of installation",
            "type": "string"
          },
          "countryOfManufacture": {
            "description": "Represents the Country of manufacturing",
            "type": "string"
          },
          "custCriticalityCode": {
            "description": "Represents the Customer criticality",
            "type": "string"
          },
          "customerPurchaseDate": {
            "description": "Represents the Customer purchase date",
            "type": "string"
          },
          "decomissioningDate": {
            "description": "Represents the Decomissioning date",
            "type": "string"
          },
          "deletionFlag": {
            "description": "Represents the Flag functional deletion",
            "type": "string"
          },
          "description": {
            "description": "Represents the Asset name or description",
            "type": "string"
          },
          "deviceType": {
            "description": "Represents the Type of asset",
            "type": "string"
          },
          "digitalId": {
            "description": "Represents the Unique Digital ID/ Label Id",
            "type": "string"
          },
          "endOfCommercializationDate": {
            "description": "Represents End of commercialisation Date",
            "type": "string"
          },
          "endOfLifeDate": {
            "description": "Represents the End of asset useful life date",
            "type": "string"
          },
          "extrnCommercialReference": {
            "description": "Represents the Customer commercial reference",
            "type": "string"
          },
          "extrnReference": {
            "description": "Represents the Customer asset reference",
            "type": "string"
          },
          "extrnSerialNumber": {
            "description": "Represents the Customer serial number",
            "type": "string"
          },
          "goldenAssetId": {
            "description": "Represents the Golden Asset id",
            "type": "string"
          },
          "goldenAssetPublisher": {
            "description": "Represents the Golden Asset Publisher code",
            "type": "string"
          },
          "id": {
            "description": "Represents the Asset id",
            "type": "string"
          },
          "initialLinePrice": {
            "description": "Represents the Initial line Price in EUR (using exchange Rate)",
            "type": "string"
          },
          "initialPrice": {
            "description": "Represents the Initial Price in EUR (using exchange Rate)",
            "type": "string"
          },
          "installDate": {
            "description": "Represents the Commissioning Date / Install Date",
            "type": "string"
          },
          "lineStatus": {
            "description": "Represents the status of the line",
            "type": "string"
          },
          "linkedToBOTransaction": {
            "description": "Represents Asset created with transaction before shipment",
            "type": "string"
          },
          "locationId": {
            "description": "Represents the Location ID (area within site)",
            "type": "string"
          },
          "locationPublisherCode": {
            "description": "Represents the Location Publisher",
            "type": "string"
          },
          "managedInSystem": {
            "description": "Represents the Flag for asset managed in the publisher",
            "type": "string"
          },
          "manufacturingDate": {
            "description": "Represents the Manufacturing unit date",
            "type": "string"
          },
          "manufacturingLotCode": {
            "description": "Represents the Batch number of the product",
            "type": "string"
          },
          "manufacturingRank": {
            "description": "Represents the Rank of the product in manufacturing batch",
            "type": "string"
          },
          "materialId": {
            "description": "Represents the material id",
            "type": "string"
          },
          "materialPublisherCode": {
            "description": "Represents the material publisher code",
            "type": "string"
          },
          "notes": {
            "description": "Represents any note specified for the asset",
            "type": "string"
          },
          "publisherCode": {
            "description": "Represents the Asset Publisher code",
            "type": "string"
          },
          "publisherMaster": {
            "description": "Represents the Master publisher of Golden Asset",
            "type": "string"
          },
          "publisherOrigin": {
            "description": "Represents the First publisher at the origin of the golden Asset",
            "type": "string"
          },
          "quantity": {
            "description": "Represents the quantity",
            "type": "string"
          },
          "reasonForDeletion": {
            "description": "Represents the Reason for functional deletion",
            "type": "string"
          },
          "referenceLink": {
            "description": "Represents the link between Asset and the Golden",
            "type": "string"
          },
          "refurbishedFlag": {
            "description": "Represents the Refurbished asset flag",
            "type": "string"
          },
          "remoteDialingNumber": {
            "description": "Represents the Remote dialing number  - phone",
            "type": "string"
          },
          "remoteMonitoringAddress": {
            "description": "Represents the Remote monitoring address",
            "type": "string"
          },
          "remoteMonitoringLink": {
            "description": "Represents Remote Monitoring system",
            "type": "string"
          },
          "revisionLevel": {
            "description": "Represents the Revision level of the asset.",
            "type": "string"
          },
          "serialNumber": {
            "description": "Represents the Serial Number of the Asset",
            "type": "string"
          },
          "serviceContractCountry": {
            "description": "Represents the Country of the service contract",
            "type": "string"
          },
          "serviceContractLineNumber": {
            "description": "Represents the Contract line Name/Number",
            "type": "string"
          },
          "serviceContractNumber": {
            "description": "Represents the Contract name/number",
            "type": "string"
          },
          "serviceContractSONumber": {
            "description": "Represents the Sales Order number  of the Service Contract header",
            "type": "string"
          },
          "serviceEndDate": {
            "description": "Represents the Service start date",
            "type": "string"
          },
          "serviceObsolecenseDate": {
            "description": "Represents the Service Obsolecense date",
            "type": "string"
          },
          "servicePlan": {
            "description": "Represents the Service plan of the contract",
            "type": "string"
          },
          "serviceStartDate": {
            "description": "Represents the Service start date",
            "type": "string"
          },
          "shipmentDateOutsideGroup": {
            "description": "Represents the Ship Date Outside group",
            "type": "string"
          },
          "siteId": {
            "description": "Represents the Account Site ID (installed at)",
            "type": "string"
          },
          "siteName": {
            "description": "Represents the Account Name",
            "type": "string"
          },
          "sitePublisherCode": {
            "description": "Represents the Site Publisher",
            "type": "string"
          },
          "standardizedSerialNumber": {
            "description": "Standardized serial Number. Can have different format than S/N",
            "type": "string"
          },
          "subCategory": {
            "description": "Represents the Sub Category",
            "type": "string"
          },
          "technicalLevel": {
            "description": "Represents the Technical level within a revision number",
            "type": "string"
          },
          "trackingStatus": {
            "description": "Represents the Tracking Status",
            "type": "string"
          },
          "usageStatus": {
            "description": "Represents the Usage status",
            "type": "string"
          },
          "version": {
            "description": "Represents the asset version",
            "type": "string"
          },
          "warrantyCode": {
            "description": "Represents the Asset Warranty type",
            "type": "string"
          },
          "warrantyEndDate": {
            "description": "Represents the Warranty end date",
            "type": "string"
          },
          "warrantyStartDate": {
            "description": "Represents the Warranty start date",
            "type": "string"
          },
          "withdrawalDate": {
            "description": "Represents the Service Obsolenscence Announcement Date",
            "type": "string"
          },
          "publisherTracking": {
            "type": "string",
            "description": "This field indicates the name of the connected App in BFO (OnSite,\nMaint,..) that has updated the end-user Installed At. In SDH this\nfield contains the publisher code"
          },
          "accountId": {
            "type": "string"
          },
          "accountPublisherCode": {
            "type": "string"
          },
          "creationDate": {
            "type": "string"
          },
          "deleteDate": {
            "type": "string"
          },
          "updateDate": {
            "type": "string"
          },
          "connectedCode": {
            "type": "string"
          },
          "blockBfo": {
            "type": "string"
          },
          "blockGolden": {
            "type": "string"
          }
        }
      },
      "fulfillAssetRegistrationRequest": {
        "type": "object",
        "title": "fulfillAssetRegistrationRequest",
        "properties": {
          "assetAccount": {
            "description": "Represents the account details of an asset, it is a complex type\nelement.",
            "type": "object",
            "properties": {
              "siteAccount": {
                "description": "Represents the site account details of an asset, it is a complex\ntype element. There is a choice between siteAccount and\nuserAccount. Either siteAccount or userAccount or both can be\npassed.This must be the account where the asset is installed.",
                "type": "object",
                "properties": {
                  "siteDetails": {
                    "description": "Represents the details of site.",
                    "type": "object",
                    "properties": {
                      "accountTypeCode": {
                        "description": "Represents the accountTypeCode of site. Example:1234.",
                        "type": "string"
                      },
                      "businessUnitCode": {
                        "description": "Represents the businessUnitCode of site. Example:PW.",
                        "type": "string"
                      },
                      "city": {
                        "description": "Represents the city of site.It must be in Latin\ncharacters. Example:PARIS",
                        "type": "string"
                      },
                      "countryCode": {
                        "description": "Represents the countryCode of site Eg:GB,US,FR.",
                        "type": "string"
                      },
                      "currency": {
                        "description": "Represents the currency of site. Example:INR,GBP",
                        "type": "string"
                      },
                      "customerClass": {
                        "description": "Represents the customerClass of site.Mandatory to be\nprovided by the APP. Example:LC5.",
                        "type": "string"
                      },
                      "gpsLattitude": {
                        "description": "Represents the gpsLattitude of site Example:1414.21.",
                        "type": "string"
                      },
                      "gpsLongitude": {
                        "description": "Represents the gpsLongitude of site Example:4512.32.",
                        "type": "string"
                      },
                      "internalAccountId": {
                        "description": "This field represents the Internal Identifier of the\nAccount in the App. In case the App wants to update an\ninformation already sent through the Api, they can\nregister the record using the same internalAccountId.\nDuring SDH processing, it ensure that the Account record\nwill be updated.",
                        "type": "string"
                      },
                      "localName": {
                        "description": "This field represents the company name in local alphabet.",
                        "type": "string"
                      },
                      "marketSegment": {
                        "description": "Represents the marketSegment of site. Mandatory to be\nprovided by the APP if  customerClass start with EU.\nExample:IT3",
                        "type": "string"
                      },
                      "name": {
                        "description": "Represents the name of site.It must be in Latin\ncharacters. Example:Renault truck",
                        "type": "string"
                      },
                      "seAccountOwnerId": {
                        "description": "Represents the seAccountOwnerId of site.\nExample:SESA81649",
                        "type": "string"
                      },
                      "stateProvinceCode": {
                        "description": "Represents the stateProvinceCode of site. Example:096\nState province is mandatory in some countries.For more\ndetails to retrieve the State province code refer\nsection 2.1.4.",
                        "type": "string"
                      },
                      "street": {
                        "description": "Represents the street of site.It must be in Latin\ncharacters. Example:2,main road",
                        "type": "string"
                      },
                      "zipCode": {
                        "description": "Represents the zipCode of site. Example:500RTzipcode is\nmandatory in some countries:make sure zipcode is\nprovided for those countries.",
                        "type": "string"
                      }
                    }
                  },
                  "siteReference": {
                    "description": "Represents the site reference of an asset, it is a complex\ntype element.There is a choice between siteReference and\nsiteDetails.",
                    "type": "object",
                    "properties": {
                      "siteAccountId": {
                        "description": "Represents the identifier of the installed at Account in\nthe publisher source system, when known and provided by\nthe Apps. Eg:741852 This must be ID of the account where\nthe asset is installed. Example:if the App has asked the\nuser whether the  asset  is installed at his own\naccount, then the APP should use here\nsiteAccountPublisher=UIMS and the siteAccountId is the\nUIMS federated ID of the userâ€™s account.",
                        "type": "string"
                      },
                      "siteAccountPublisher": {
                        "description": "Represents the siteAccountPublisher. Example:BFO, SDH,\nUIMS.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "userAccount": {
                "description": "Represents the user account of an asset, it is a complex type\nelement.",
                "type": "object",
                "properties": {
                  "userAccountDetails": {
                    "description": "Represents the user account details of an asset, it is a\ncomplex type element.It is applicable ot external users\nonly. Not applicable to users using their SESA to log in.",
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "description": "Represents the identifier of the account (company) of\nthe logged in user in the publisher source system.It is\nthe federated ID of the account of the user.\nExample:12345.",
                        "type": "string"
                      },
                      "accountPublisher": {
                        "description": "Represents the SDH Publisher of the account (company) of\nthe logged in user, when known and provided by the Apps\n(like 'UIMS').Example:UIMS",
                        "type": "string"
                      },
                      "roleStatus": {
                        "description": "Status implifying if the player role is Cancelled or\nRemoved. Example:Cancelled.",
                        "type": "string"
                      },
                      "userRole": {
                        "description": "Represents the role the Account of the user is playing\nfor the Asset. Example:ROLE_3.",
                        "type": "string"
                      }
                    }
                  },
                  "userDetails": {
                    "description": "Represents the user details of an asset, it is a complex\ntype element.",
                    "type": "object",
                    "properties": {
                      "loggedInUserId": {
                        "description": "Represents the identifier of the logged in user in the\npublisher source system.Example:147852.",
                        "type": "string"
                      },
                      "userPublisher": {
                        "description": "Represents the SDH Publisher of the logged in user.\nExample:UIMS,IDS.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "assetDetails": {
            "description": "Represents the details of an asset, it is a complex type element.",
            "type": "object",
            "properties": {
              "description": {
                "description": "Represents the description of product. Example:Transformer",
                "type": "string"
              },
              "brandDetails": {
                "description": "Represents the brand details of an asset, it is a complex type\nelement. There is a choice between brandDetails and\nproductDetails.",
                "type": "object",
                "properties": {
                  "brand": {
                    "description": "Represents the brand of an asset. Example:1017",
                    "type": "string"
                  },
                  "deviceType": {
                    "description": "Represents the device type of an asset. Example:DEVTYP000013",
                    "type": "string"
                  },
                  "range": {
                    "description": "Represents the range of an asset. Example:ABB",
                    "type": "string"
                  }
                }
              },
              "commissioningDate": {
                "description": "This field contain the installation or commissioning date of the\nAsset.",
                "type": "string"
              },
              "connectedDetails": {
                "description": "Captures connection type details of the asset.",
                "type": "object",
                "properties": {
                  "connectionType": {
                    "description": "For connected asset, one of these values should be sent\nCLOUD/ON_PREMISE/NOT_CONNECTED",
                    "type": "string"
                  },
                  "ipAddress": {
                    "description": "Captures the IP physical address of the Asset.",
                    "type": "string"
                  },
                  "macAddress": {
                    "description": "This field aims to contain the MAC address of the Asset.",
                    "type": "string"
                  },
                  "remoteAddress": {
                    "description": "This field aims to contain the IP physical address of the\nAsset.",
                    "type": "string"
                  },
                  "remoteSystem": {
                    "description": "This information represents the code of remote monitoring\nsystem.",
                    "type": "string"
                  }
                }
              },
              "customerReference": {
                "description": "Customer reference value is reflected into BFS in case the App remains master of the Asset.  Eg: 102232",
                "type": "string"
              },
              "firmwareVersion": {
                "description": "Represents the firmware version of an asset. Example:1.2",
                "type": "string"
              },
              "internalAssetId": {
                "description": "internalAssetId:This field represents the Internal Identifier of\nthe Asset in the App. In case the App wants to update an\ninformation already sent through the Api, they can register the\nrecord using the same internalAssetId. During SDH processing, it\nensure that the Asset record will be updated.",
                "type": "string"
              },
              "linkedAsset": {
                "description": "Represents the link type details of the asset.It is a complex\ntype element.",
                "type": "object",
                "properties": {
                  "assetId": {
                    "description": "'Contains the internal identifier of the linked asset from\n    the App. Example UID_1234'",
                    "type": "string"
                  },
                  "assetLinkStatus": {
                    "description": "In case the link is cancelled or removed.Example :Cancelled",
                    "type": "string"
                  },
                  "assetLinkType": {
                    "description": "Contains the link type with the linked asset. Can be\nAS_LINK_1 for child or AS_LINK_7 for dependant",
                    "type": "string"
                  },
                  "assetRange": {
                    "description": "'Contains the range of the linked asset. This value should\nbe provided if the linked asset does not have product\nreference. Example : 1017'",
                    "type": "string"
                  },
                  "productReference": {
                    "description": "Contains the product reference of the linked asset. Example\n: GSW4G2W",
                    "type": "string"
                  },
                  "serialNumber": {
                    "description": "Contains the serial number of the linked asset.\n    Example:345678296521",
                    "type": "string"
                  },
                  "assetPs": {
                    "type": "string",
                    "example": "BFO",
                    "description": "the system origin of the Asset"
                  }
                }
              },
              "manufacturingDate": {
                "description": "Represents the manufacturing date of the SE product. Format\nshould be YYYY-MM-DD.It is used to calculate factory warranty\nstart date and end date in BFO. It is key information for the\nlead generation engine. Example:2018-03-26.",
                "type": "string"
              },
              "productDetails": {
                "description": "Represents the product details of an asset, it is a complex type\nelement.",
                "type": "object",
                "properties": {
                  "productReference": {
                    "description": "Represents the product reference the asset is made of in\nthat system (product reference publisher). Example:123890",
                    "type": "string"
                  },
                  "productReferencePublisher": {
                    "description": "Represents the product reference publisher for the product\nthe asset is made of. Example:OPS, GMR",
                    "type": "string"
                  }
                }
              },
              "serialNumber": {
                "description": "Represents the manufacturing serial number of the asset.The\nserial number is the only criteria to identify uniquely the\nAsset.",
                "type": "string"
              },
              "uniqueDigitalId": {
                "description": "uniqueDigitalId:Represents unique digital Identifier for the\nasset.Example:102232.",
                "type": "string"
              },
              "usageStatusCode": {
                "description": "Represents  the usage status of the asset on the site.\nEnumeration\nvalues:LOST,IN_CHANNEL,SWAPPED,REMOVED,NOT_USED,SCRAPPED,SUPPLY_CHAIN,IN_USE.Detailed\nlist of code that can be used and corresponding label can be\nqueried from the SDH query ASSET_USAGE_STATUS.",
                "type": "string"
              },
              "subRange": {
                "type": "string",
                "description": "SubRange or Sub_Category_id of the Asset from OneIBCatalog -\nOptionnal even for Macro-Ref"
              },
              "goldenId": {
                "type": "string",
                "description": "Represents the Golden Asset ID when known by the consumer.\nDuring asset creation it will force the match. During asset\nupdate it will help data synchronization with the collect\npublisher"
              },
              "goldenVersion": {
                "type": "string",
                "description": "Version number \nof the Golden Asset. Used for data synchronization"
              },
              "collectPublisherCode": {
                "type": "string",
                "description": "Represents the publisher code of the system that is collecting\nasset data from origin/source. Mandatory for application who\nwants to reconciliate data"
              },
              "deviceDetails": {
                "type": "object",
                "properties": {
                  "deviceType": {
                    "type": "string",
                    "example": "DEVTYP000073",
                    "description": "OIC Product Device Type"
                  },
                  "assetModel": {
                    "type": "string",
                    "example": "Acti9 xC60",
                    "description": "Asset Model"
                  },
                  "assetFamily": {
                    "type": "string",
                    "example": "family-electrical-equipment",
                    "description": "The Product Family of the asset "
                  },
                  "assetLocalType": {
                    "type": "string",
                    "example": "type-circuit-breaker",
                    "description": "Local Asset Type "
                  }
                }
              }
            }
          },
          "publisherCode": {
            "description": "Represents the code of the publisher/source system that pushes data\nto SDH, this is defined by SDH.",
            "type": "string"
          },
          "siteLocation": {
            "type": "object",
            "description": "Represents the complex bloc of elements to indicate the location of the asset in the account site.\nNeed to mention either the locationReference or LocationDetails",
            "properties": {
              "locationReference": {
                "type": "object",
                "description": "Indicates the identifier of a known location in the system",
                "properties": {
                  "locationId": {
                    "type": "string",
                    "description": "Identifier of the location of the Asset (ex :\na8a0034234234)"
                  },
                  "locationPublisherCode": {
                    "type": "string",
                    "description": "Publisher of the location of the Asset"
                  }
                }
              },
              "locationDetails": {
                "type": "object",
                "description": "Block of elements that describes the new location created or\nupdated by the consumer",
                "properties": {
                  "locationName": {
                    "type": "string",
                    "description": "Name of the Location to create or to update (ex : Building\nLe Hive)"
                  },
                  "locationType": {
                    "type": "string",
                    "description": "Type of location : ROOM, FLOOR, BUILDING\nLoV part of referential data. Location will be stuck in DQC if the type is wrong"
                  },
                  "internalLocationId": {
                    "type": "string",
                    "description": "Internal identifier of the location in the source, used for\nupdate"
                  },
                  "locationParentId": {
                    "type": "string",
                    "description": "Indicate the identifier of the parent location. When\npublisher BFO, expects the identifier for BFO..."
                  },
                  "locationParentPs": {
                    "type": "string",
                    "description": "Indicate the publisher of the parent location. Can be BFO or\nother source publisher."
                  }
                }
              }
            }
          }
        }
      },
      "fulfillAssetRegistrationResponse": {
        "description": "Represents the result of fulfillAssetRegistrationResponse.",
        "type": "string"
      },
      "assetDQC": {
        "title": "assetDQC",
        "type": "object",
        "properties": {
          "withBlockGolden": {
            "type": "string",
            "description": "Indicates whether there is a block GOLDEN data quality issue on the\nAsset or not"
          },
          "withBlockBFO": {
            "type": "string",
            "description": "Indicates whether there is a block BFO data quality issue on the\nAsset or not"
          }
        },
        "x-examples": {}
      },
      "assetId": {
        "title": "assetId",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "publisherCode": {
            "type": "string"
          },
          "goldenId": {
            "type": "string"
          },
          "goldenPublisherCode": {
            "type": "string"
          },
          "publisherMaster": {
            "type": "string"
          },
          "publisherOrigin": {
            "type": "string"
          },
          "refLink": {
            "type": "string"
          },
          "SDHVersion": {
            "type": "string"
          },
          "collectPublisher": {
            "type": "string"
          }
        }
      },
      "siteLocation": {
        "title": "siteLocation",
        "type": "object",
        "properties": {
          "siteId": {
            "type": "string"
          },
          "sitePublisher": {
            "type": "string"
          },
          "locationId": {
            "type": "string"
          },
          "locationPublisher": {
            "type": "string"
          }
        },
        "description": ""
      },
      "assetFacets": {
        "title": "assetFacets",
        "type": "object",
        "properties": {
          "goldenAsset": {
            "$ref": "#/components/schemas/assetFacet"
          },
          "publisherAsset": {
            "$ref": "#/components/schemas/assetFacet"
          }
        }
      },
      "assetFacet": {
        "title": "assetFacet",
        "type": "object",
        "properties": {
          "installedProduct": {
            "$ref": "https://se-avid.stoplight.io/api/nodes.raw/?srn=gh1/avid-api-design/fieldservice-common/models/Field-Services-Installed-Product-Basic-structure.v1.json&mid=61&deref=bundle"
          },
          "DQC": {
            "$ref": "#/components/schemas/assetDQC"
          },
          "identifier": {
            "$ref": "#/components/schemas/assetId"
          },
          "siteLocation": {
            "$ref": "#/components/schemas/siteLocation"
          }
        }
      },
      "assetFacetsResultSet": {
        "title": "assetFacetsResultSet",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/assetFacets"
        }
      },
      "assetResultSet_OBSOLETE": {
        "type": "object",
        "xml": {
          "name": "result"
        },
        "properties": {
          "assets": {
            "description": "Represents the array of asset objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/asset"
            }
          },
          "": {
            "type": "string"
          }
        }
      },
      "error_DEPRECATED": {
        "title": "error",
        "type": "object",
        "x-tags": [
          "Deprecated Models"
        ],
        "properties": {
          "code": {
            "description": "",
            "type": "string"
          },
          "description": {
            "description": "",
            "type": "string"
          }
        }
      },
      "installedProductsRequest": {
        "properties": {
          "installedProductId": {
            "description": "",
            "type": "string"
          },
          "opportunityLineId": {
            "description": "",
            "type": "string"
          }
        },
        "title": "installedProductsRequest",
        "type": "object",
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "installedProductsResponse": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/result_DEPRECATED"
          }
        },
        "title": "installedProductsResponse",
        "type": "object",
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "record_DEPRECATED": {
        "properties": {
          "company": {
            "description": "Represents the isDeleted value",
            "type": "string"
          },
          "deleted": {
            "description": "Represents the isDeleted value",
            "type": "boolean"
          },
          "digitalId": {
            "description": "Represents the isDeleted value",
            "type": "string"
          },
          "installedProductId": {
            "description": "Represents the installedProductId",
            "type": "string"
          },
          "locked": {
            "description": "Represents the islocked value",
            "type": "boolean"
          },
          "name": {
            "description": "Represents the name",
            "type": "string"
          },
          "produtIQTemplate": {
            "description": "Represents the isDeleted value",
            "type": "string"
          },
          "serialNumber": {
            "description": "Represents the isDeleted value",
            "type": "string"
          },
          "subLocation": {
            "description": "Represents the isDeleted value",
            "type": "string"
          },
          "updateProduct": {
            "description": "Represents the isDeleted value",
            "type": "string"
          }
        },
        "title": "record",
        "type": "object",
        "xml": {
          "name": "record"
        },
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "records_DEPRECATED": {
        "items": {
          "$ref": "#/components/schemas/record_DEPRECATED"
        },
        "type": "array",
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "result_DEPRECATED": {
        "properties": {
          "created": {
            "description": "",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/error_DEPRECATED"
          },
          "id": {
            "description": "",
            "type": "string"
          },
          "success": {
            "description": "",
            "type": "string"
          }
        },
        "title": "result",
        "type": "object",
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "LocationUpdate_DEPRECATED": {
        "title": "LocationUpdate@DEPRECATED",
        "description": "Represents a Location belonging to an account",
        "allOf": [
          {
            "$ref": "#/components/schemas/LocationCreate_DEPRECATED"
          },
          {
            "type": "object",
            "properties": {
              "locationId": {
                "description": "Represents the site Id",
                "type": "string",
                "example": "a2Lg0000000l18BEAQ"
              }
            }
          }
        ],
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "AccountInstalledBase_DEPRECATED": {
        "title": "AccountInstalledBase@DEPRECATED",
        "description": "Account Installed Base contains details of the account and all installed base related data",
        "type": "object",
        "x-tags": [
          "Deprecated Models"
        ],
        "properties": {
          "accountId": {
            "description": "represents the Account ID",
            "type": "string",
            "example": "001g0000026PU8BAAW"
          },
          "accountName": {
            "description": "represents the Account Name",
            "type": "string",
            "example": "Vaibhav Sales Corporation"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Address_DEPRECATED"
          },
          "VATNumber": {
            "description": "represents the Tax Identification Number",
            "type": "string",
            "example": "VAT TIN"
          },
          "phone": {
            "description": "For efficiency reasons, the customer contact work phone number should be the direct line and in international format as much as possible.",
            "type": "string",
            "example": "9009089898"
          },
          "lastName": {
            "type": "string",
            "description": "Represents the Account Last Name",
            "example": "Corporation"
          },
          "firstName": {
            "type": "string",
            "description": "Represents the Account First Name",
            "example": "Vaibhavi"
          },
          "accountNumber": {
            "type": "string",
            "description": "Represents the Account Number",
            "example": "001g0000026PU8BAAW"
          },
          "city": {
            "type": "string",
            "description": "Represents the city",
            "example": "Bengaluru"
          },
          "country": {
            "type": "string",
            "description": "Represents the country",
            "example": "IN"
          },
          "stateProvince": {
            "type": "string",
            "description": "Custom field to store State/Province based on a reference table and linked to selected Country",
            "example": "KAR"
          },
          "street": {
            "type": "string",
            "description": "Custom field to store street",
            "example": "Venugopal nagar"
          },
          "zipCode": {
            "type": "string",
            "description": "Custom field to store Zip Code",
            "example": "560089"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Checkbox to indicate if the object is deleted",
            "example": true
          },
          "parentId": {
            "type": "string",
            "description": "Represents the Parent Id",
            "example": "001g0000026PU8BAOW"
          },
          "description": {
            "type": "string",
            "description": "field to store account description",
            "example": "Account Org"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Checkbox to indicate if the object is locked",
            "example": true
          },
          "locationsTotal": {
            "format": "integer",
            "description": "Total number of locations for the requested Account",
            "example": 65,
            "type": "string"
          },
          "locationsNextToken": {
            "type": "string",
            "description": "If field locationsNextToken is present, use its value to iterate and get the next batch of locations for the given account e.g. /accounts/{accountid}/installedbase?locationsNextToken={locationsNextToken}",
            "example": "01gg000001XPehZAAT-20"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationInstalledProductTree_DEPRECATED"
            }
          }
        }
      },
      "Address_DEPRECATED": {
        "title": "Address@DEPRECATED",
        "description": "Address object",
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "Represents the city",
            "example": "Bengaluru"
          },
          "country": {
            "type": "string",
            "description": "Represents the country",
            "example": "IN"
          },
          "countryCode": {
            "type": "string",
            "description": "Represents the countryCode",
            "example": "IN"
          },
          "geocodeAccuracy": {
            "type": "string",
            "description": "Represents the geocodeAccuracy",
            "example": "Address"
          },
          "latitude": {
            "type": "number",
            "description": "Represents the latitude",
            "example": 12.97
          },
          "longitude": {
            "type": "number",
            "description": "Represents the longitude",
            "example": 77.59
          },
          "postalCode": {
            "type": "string",
            "description": "Represents the postalCode",
            "example": "560078"
          },
          "state": {
            "type": "string",
            "description": "Represents the state",
            "example": "KAR"
          },
          "stateCode": {
            "type": "string",
            "description": "Represents the stateCode",
            "example": "KAR"
          },
          "street": {
            "type": "string",
            "description": "Represents the street",
            "example": "HMT Layout"
          }
        },
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "LocationInstalledProductTree_DEPRECATED": {
        "allOf": [
          {
            "properties": {
              "isLocked": {
                "type": "boolean",
                "description": "Checkbox to indicate if the object is locked",
                "example": true
              },
              "address": {
                "type": "string",
                "description": "Represents the address",
                "example": "Manyata tech park"
              },
              "isDeleted": {
                "type": "boolean",
                "description": "Checkbox to indicate if the object is deleted",
                "example": true
              },
              "serviceRoles": {
                "type": "array",
                "description": "List of Service Roles",
                "items": {
                  "$ref": "#/components/schemas/ServiceRole_DEPRECATED"
                }
              },
              "installedProductsTotal": {
                "type": "string",
                "description": "The total number of locations",
                "format": "integer"
              },
              "installedProductsNextToken": {
                "type": "string",
                "example": "01gg000001XPehZAAT-20",
                "description": "Use this token to get the next page of installed base elements"
              },
              "installedProducts": {
                "type": "array",
                "description": "List of Installed Products",
                "items": {
                  "$ref": "#/components/schemas/InstalledProductRead_DEPRECATED"
                }
              }
            }
          }
        ],
        "description": "The definition of Location Tree object",
        "title": "LocationInstalledProductTree@DEPRECATED",
        "x-tags": [
          "Deprecated Models"
        ],
        "type": "object"
      },
      "LocationCreate_DEPRECATED": {
        "type": "object",
        "properties": {
          "locationName": {
            "description": "Represents the site name",
            "type": "string",
            "example": "Test-Site"
          },
          "account": {
            "description": "Represents the Account object to which the site belongs",
            "type": "object",
            "properties": {
              "id": {
                "description": "Represents the Account ID",
                "type": "string",
                "example": "001g0000026PU8BAAW"
              },
              "name": {
                "description": "Represents the Account Name",
                "type": "string",
                "example": "Vaibhavi Sales Organization"
              }
            }
          },
          "onsiteRefId": {
            "type": "string",
            "description": "Represents the On Site Reference Id",
            "example": "Ref-123"
          },
          "rank": {
            "type": "number",
            "format": "double",
            "description": "Represents the Rank",
            "example": 12.09
          },
          "city": {
            "type": "string",
            "description": "“City” part of the site’s address",
            "example": "Bengaluru"
          },
          "country": {
            "type": "string",
            "description": "“Country” part of the site’s address",
            "example": "India"
          },
          "locationType": {
            "type": "string",
            "description": "Represents the Location Type",
            "example": "SITE"
          },
          "siteFax": {
            "type": "string",
            "description": "Main fax number for the site if available",
            "example": "+91 562"
          },
          "sitePhone": {
            "type": "string",
            "description": "Main phone number for the site if available",
            "example": "+91 9009090909"
          },
          "state": {
            "type": "string",
            "description": "“State/Province” part of the site’s address",
            "example": "KAR"
          },
          "street": {
            "type": "string",
            "description": "“Street” part of the site’s address",
            "example": "Manyata"
          },
          "zip": {
            "type": "string",
            "description": "“Zip/Postal code” part of the site’s address",
            "example": "678909"
          },
          "technicalAttributePart1": {
            "type": "string",
            "description": "Represents the Technical Attribute Part 1 field",
            "example": "Parts"
          },
          "toDelete": {
            "type": "boolean",
            "description": "Checkbox to mark the object to be deleted",
            "example": true
          },
          "ventilation": {
            "type": "string",
            "description": "Represents the Ventilation. It is pick list value",
            "example": "Natural convection"
          },
          "airConditioning": {
            "type": "string",
            "description": "Represents the Air Conditioning. It is pick list value",
            "example": "Centralised air cond system"
          },
          "locationFunction": {
            "type": "string",
            "description": "Represents the Location Function",
            "example": "Office"
          },
          "parentId": {
            "type": "string",
            "description": "Represents the Parent Location Id",
            "example": "012A0000000npoYIAQ"
          },
          "recordTypeId": {
            "type": "string",
            "description": "Represents the record type id.",
            "example": "012A0000000ncnYIAQ"
          },
          "addressLine2": {
            "type": "string",
            "description": "Represents the address line 2",
            "example": "Cuunigham road, vasanthngar, Bangalore"
          },
          "locationTechnicalCharacteristics": {
            "type": "string",
            "description": "Represents the technical characteristics of the location",
            "example": "Technical details"
          },
          "email": {
            "description": "Represents the Email",
            "type": "string",
            "example": "joe@xxx.com"
          },
          "siteSpecificComments": {
            "description": "Represents the site specific comments",
            "type": "string",
            "example": "site"
          },
          "stateProvince": {
            "type": "string",
            "description": "Custom field to store State/Province based on a reference table and linked to selected Country",
            "example": "KAR"
          },
          "technicalCountryName": {
            "description": "Represents the technical country name",
            "type": "string",
            "example": "IN"
          },
          "technicalCreateFromWS": {
            "description": "Represents if site was technical created",
            "type": "boolean",
            "example": false
          }
        },
        "description": "Model defining the Locations Create object",
        "title": "LocationCreate@DEPRECATED",
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "ServiceRole_DEPRECATED": {
        "type": "object",
        "description": "The defenition of Service Role object",
        "title": "ServiceRole@DEPRECATED",
        "x-tags": [
          "Deprecated Models"
        ],
        "properties": {
          "serviceRoleId": {
            "description": "Represents the Service Role Id",
            "type": "string",
            "example": "a7Mg0000000cxPBEAY"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Checkbox to indicate if the object is deleted",
            "example": true
          },
          "serviceRoleName": {
            "type": "string",
            "description": "Represents the Service Role Name",
            "example": "Service Role-26015423"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Checkbox to indicate if the object is locked",
            "example": true
          },
          "account": {
            "description": "Represents the Account",
            "type": "string",
            "example": "Vaibhavi Sales Organization"
          },
          "installedProduct": {
            "type": "string",
            "description": "Represents the installed Product",
            "example": "InstalledProd-01"
          },
          "notes": {
            "type": "string",
            "description": "Represents the notes",
            "example": "Notes"
          },
          "role": {
            "type": "string",
            "description": "Role picklist",
            "example": "Role"
          },
          "contact": {
            "description": "Contact of the Service role",
            "allOf": [
              {
                "$ref": "#/components/schemas/Contact_DEPRECATED"
              }
            ]
          }
        }
      },
      "Contact_DEPRECATED": {
        "title": "Contact@DEPRECATED",
        "description": "Contact object",
        "type": "object",
        "x-tags": [
          "Deprecated Models"
        ],
        "properties": {
          "contactId": {
            "description": "Represents the Contact ID",
            "type": "string",
            "example": "003g000001v7DCcAAM"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Checkbox to indicate if the object is deleted",
            "example": true
          },
          "account": {
            "description": "Represents the Account",
            "type": "object",
            "properties": {
              "id": {
                "description": "Represents the Account ID",
                "type": "string",
                "example": "001g0000026PU8BAAW"
              },
              "name": {
                "description": "Represents the Account Name",
                "type": "string",
                "example": "Vaibhavi Sales Corporation"
              }
            }
          },
          "lastName": {
            "description": "Represents the Last Name",
            "type": "string",
            "example": "Corp"
          },
          "firstName": {
            "description": "Represents the First Name",
            "type": "string",
            "example": "Vaibhav"
          },
          "fullName": {
            "description": "Represents the Full Name",
            "type": "string",
            "example": "Vaibhavi Sales Corporation"
          },
          "otherAddress": {
            "$ref": "#/components/schemas/Address_DEPRECATED"
          },
          "mailingAddress": {
            "$ref": "#/components/schemas/Address_DEPRECATED"
          },
          "workPhoneNational": {
            "description": "Represents the Work Phone National",
            "type": "string",
            "example": "+91 900879879"
          },
          "workFax": {
            "description": "Represents the Work Fax",
            "type": "string",
            "example": "+91 234"
          },
          "mobilePhone": {
            "description": "Represents the Mobile Phone",
            "type": "string",
            "example": "+91 9009791879"
          },
          "homePhone": {
            "description": "Represents the home Phone",
            "type": "string",
            "example": "+91 9009891879"
          },
          "otherPhone": {
            "description": "Represents the home Phone",
            "type": "string",
            "example": "+91 9009891879"
          },
          "assistantPhone": {
            "description": "Represents the home Phone",
            "type": "string",
            "example": "+91 9009111879"
          },
          "email": {
            "description": "Represents the Email",
            "type": "string",
            "example": "joe@xxx.com"
          },
          "jobTitle": {
            "description": "Represents the Job Title",
            "type": "string",
            "example": "Senior Analyst"
          },
          "workPhone": {
            "description": "Represents the Work Phone",
            "type": "string",
            "example": "+91 9008791879"
          },
          "zipCode": {
            "description": "Represents the Zip Code",
            "type": "string",
            "example": "+91 9008791879"
          },
          "localCity": {
            "description": "Represents the Local City",
            "type": "string",
            "example": "Bengaluru"
          }
        }
      },
      "InstalledProductUpdate_DEPRECATED": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InstalledProductCreate_DEPRECATED"
          },
          {
            "properties": {
              "installedProductId": {
                "type": "string",
                "description": "Represents the installed product Id",
                "example": "a1ag0000007uCLGAA2"
              }
            }
          }
        ],
        "description": "Updating the installed Products structure",
        "title": "InstalledProductUpdate@DEPRECATED",
        "type": "object",
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "InstalledProductRead_DEPRECATED": {
        "allOf": [
          {
            "properties": {
              "isDeleted": {
                "type": "boolean",
                "description": "Checkbox to indicate if the object is deleted",
                "example": true
              },
              "isLocked": {
                "type": "boolean",
                "description": "Checkbox to indicate if the object is locked",
                "example": true
              },
              "endOfCommercialisationDate": {
                "type": "string",
                "format": "date",
                "description": "Represents the End of Commercialisation Date",
                "example": "2019-05-09"
              },
              "endOfInstalledProductLifeDate": {
                "type": "string",
                "format": "date",
                "description": "Represents the End of InstalledProductLifeDate",
                "example": "2019-05-09"
              },
              "productType": {
                "type": "string",
                "description": "Represents the Product Type",
                "example": "Cooling"
              },
              "productBrand": {
                "type": "string",
                "description": "Represents the Product Brand"
              },
              "productDeviceType": {
                "type": "string",
                "description": "Represents the Product Device Type"
              },
              "productRange": {
                "type": "string",
                "description": "Represents the Product Range"
              },
              "productSubrange": {
                "type": "string",
                "description": "Represents the Product Subrange"
              },
              "productName": {
                "type": "string",
                "description": "Name of the product associated with the Installed Product"
              },
              "serviceObsolecenseDate": {
                "type": "string",
                "format": "date",
                "description": "Exposed to customer - Date where we no longer support this product type.",
                "example": "2019-05-09"
              },
              "subType": {
                "type": "string",
                "description": "Represents the sub type"
              },
              "schneiderBrandFamily": {
                "type": "string",
                "description": "Flag indicates asset possesses a =SE= brand."
              },
              "productCode": {
                "type": "string",
                "description": "Product Code of an Installed Product"
              },
              "connectable": {
                "type": "string",
                "description": "Indicates whether the IP is Connectable"
              },
              "serviceability": {
                "type": "string",
                "description": "Indicates whether the IP is Serviceable",
                "example": true
              },
              "fieldServiceBU": {
                "type": "string",
                "description": "Business Unit of the Field Services"
              },
              "stockKeepingUnit": {
                "type": "string",
                "description": "Product SKU"
              }
            }
          }
        ],
        "description": "Installed Product object",
        "title": "InstalledProductRead@DEPRECATED",
        "x-tags": [
          "Deprecated Models"
        ],
        "type": "object"
      },
      "InstalledProductCreate_DEPRECATED": {
        "type": "object",
        "description": "Installed Product Create model",
        "properties": {
          "installedProductName": {
            "type": "string",
            "description": "Represents the Installed product name",
            "example": "InstalledProduct1"
          },
          "recordTypeId": {
            "type": "string",
            "description": "Represents the record type id.",
            "example": "012A0000000ncnYIAQ"
          },
          "sdhBrandId": {
            "type": "string",
            "description": "Represents the SDH Brand Id"
          },
          "sdhCategoryId": {
            "type": "string",
            "description": "Represents the SDH Category Id"
          },
          "sdhDeviceTypeId": {
            "type": "string",
            "description": "Represents the SDH Devide Type Id"
          },
          "sdhSubRangeId": {
            "type": "string",
            "description": "Represents the SDH Sub Range Id"
          },
          "brandToCreate": {
            "type": "string",
            "description": "Represents the Brand to Create",
            "example": "Schneider"
          },
          "company": {
            "type": "string",
            "description": "Represents the Company"
          },
          "breakingTechnology": {
            "type": "string",
            "description": "Represents the breaking technology",
            "example": "Schneider"
          },
          "capacitorPowerUOM": {
            "type": "string",
            "description": "Represents the capacitorPowerUOM. It is a picklist value",
            "example": "volt-ampere-reactive (var)"
          },
          "capacitorPowerkVAR": {
            "type": "number",
            "format": "double",
            "description": "Represents the capacitorPowerkVAR. It is a picklist value",
            "example": 12.09
          },
          "commissioningDate": {
            "type": "string",
            "format": "date",
            "description": "When this installed product has been incorporated into a total solution and that solution is tested and is functional.",
            "example": "2019-05-09"
          },
          "deviceTypeToCreate": {
            "type": "string",
            "description": "Represents the Device Type to Create"
          },
          "forceCreation": {
            "type": "boolean",
            "description": "Represents the force creation",
            "example": true
          },
          "goldenAssetId": {
            "type": "string",
            "description": "Represents the Golden Asset Id",
            "example": "\"123\""
          },
          "installationMode": {
            "type": "string",
            "description": "Represents the installation Mode",
            "example": "INSTAL_BT_3"
          },
          "installedProduct": {
            "type": "string",
            "description": "Represents the installed Product"
          },
          "locationType": {
            "type": "string",
            "description": "Represents the location type"
          },
          "manufacturingDate": {
            "type": "string",
            "format": "date",
            "description": "Represents the Manufacturing Date",
            "example": "2019-09-07"
          },
          "manufacturingUnitDate": {
            "type": "string",
            "format": "date",
            "description": "Represents the Manufacturing Unit Date",
            "example": "2019-06-07"
          },
          "numberOfPoles": {
            "type": "number",
            "format": "double",
            "description": "Represents the number of poles",
            "example": 2
          },
          "onsiteRefId": {
            "type": "string",
            "description": "Represents the On Site Reference Id",
            "example": "789"
          },
          "powerUOM": {
            "type": "string",
            "description": "Represents the On Site Reference Id",
            "example": "789"
          },
          "primaryVoltageUOM": {
            "type": "string",
            "description": "Represents the On Site Reference Id",
            "example": "789"
          },
          "productDescription": {
            "type": "string",
            "description": "Represents the On Site Reference Id",
            "example": "product"
          },
          "purchaseOrderNumber": {
            "type": "string",
            "description": "Represents the Product Subrange"
          },
          "purchasedDate": {
            "type": "string",
            "format": "date",
            "description": "Represents the End of purchased date",
            "example": "2019-05-09"
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "description": "Represents the quantity",
            "example": 12
          },
          "rangeToCreate": {
            "type": "string",
            "description": "Represents the Range to Create"
          },
          "rank": {
            "type": "number",
            "format": "double",
            "description": "Represents the Rank",
            "example": 12
          },
          "ratedCurrentUOM": {
            "description": "Represents the rated Current UOM",
            "type": "string"
          },
          "ratedCurrent": {
            "description": "Represents the rated Current",
            "type": "number",
            "format": "double"
          },
          "ratedOperatingVoltageUOM": {
            "description": "Represents the ratedOperatingVoltageUOM",
            "type": "string"
          },
          "ratedOperatingVoltageUs": {
            "description": "Represents the ratedOperatingVoltageUs",
            "type": "number",
            "format": "double"
          },
          "ratedVoltageUOM": {
            "description": "Represents the rated VoltageUOM",
            "type": "string"
          },
          "ratedVoltage": {
            "description": "Represents the rated Voltage",
            "type": "number",
            "format": "double"
          },
          "reasonForDeletionMerger": {
            "description": "Represents the reasonForDeletionMerger",
            "type": "string"
          },
          "recommendedMaintenanceDate": {
            "type": "string",
            "format": "date",
            "description": "Represents the Recommended Maintenance Date",
            "example": "2019-05-09"
          },
          "seIdentification": {
            "type": "string",
            "description": "Represents the Schneider Identification"
          },
          "skuOnsite": {
            "type": "string",
            "description": "query product using sku if not found continue with same brand range devicetype"
          },
          "skuToCreate": {
            "type": "string",
            "description": "Represents the SKU to create"
          },
          "dateInstalled": {
            "type": "string",
            "format": "date",
            "description": "Represents the dateInstalled",
            "example": "2019-05-09"
          },
          "parent": {
            "type": "string",
            "description": "Serial/Lot number of the parent product in the installed product hierarchy. This is a lookup to an existing installed product record."
          },
          "product": {
            "type": "string",
            "description": "Name of the product. This is a lookup to an existing salesforce product record."
          },
          "location": {
            "type": "string",
            "description": "Represents the site id",
            "example": "a2Lg0000000l18BEAQ"
          },
          "serialLotNumber": {
            "type": "string",
            "description": "Unique identification of this product. This information is Required if the product’s tracking is Serialized or Lot/Batch Tracked in the product record"
          },
          "state": {
            "type": "string",
            "description": "Represents the state",
            "example": "a2Lg0000000l14TEAQ"
          },
          "status": {
            "type": "string",
            "description": "Usage status of the asset. It is a lookup value",
            "example": "IN_USE"
          },
          "subLocation": {
            "type": "string",
            "description": "Current physical location of the product. This is a lookup to an existing location record",
            "example": "a2Lg0000000l14TEAQ"
          },
          "toplevel": {
            "type": "string",
            "description": "Serial/Lot number of the top-most product in the installed product hierarchy.",
            "example": "a2Lg0000000l14TEAQ"
          },
          "warrantyEndDate": {
            "type": "string",
            "format": "date",
            "description": "This field is used by Reverse Logistics Module. End date of the latest warranty for this installed product. Derived automatically upon creating/updating warranty",
            "example": "2021-05-09"
          },
          "secondaryVoltage1": {
            "type": "number",
            "format": "double",
            "description": "Represents the secondary voltage 1",
            "example": 40
          },
          "secondaryVoltage2": {
            "type": "number",
            "format": "double",
            "description": "Represents the secondary voltage 2",
            "example": 23
          },
          "secondaryVoltageUOM": {
            "type": "string",
            "description": "Represents the SecondaryVoltageUOM__c",
            "example": "KVT"
          },
          "subRangeToCreate": {
            "type": "string",
            "description": "Represents the sub range to create"
          },
          "subTypeToCreate": {
            "type": "string",
            "description": "Represents the sub type to create"
          },
          "swapDateTime": {
            "type": "string",
            "format": "datetime",
            "description": "represents the swap date time",
            "example": "2019-05-09"
          },
          "technicalAttributePart1": {
            "type": "string",
            "description": "Represents the Technical Attribute Part 1"
          },
          "toBeDeletedMerge": {
            "type": "boolean",
            "description": "Represents the To Be Deleted Merge"
          },
          "toDelete": {
            "type": "boolean",
            "description": "Represents if the object is deleted"
          },
          "uniqueSEIdentification": {
            "type": "string",
            "description": "Unique digital Identifier for the asset."
          }
        },
        "title": "InstalledProductCreate@DEPRECATED",
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "MultipleResponse_DEPRECATED": {
        "type": "array",
        "items": {
          "properties": {
            "id": {
              "type": "string",
              "description": "Represents the Identifier of the created/updated object",
              "example": "a2Lg0000000l14TEAQ"
            },
            "success": {
              "type": "boolean",
              "description": "Represents if the transaction was succesful",
              "example": true
            },
            "errors": {
              "type": "array",
              "items": {
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Represents the error message",
                    "example": "Record ID: id value of incorrect type: 12"
                  },
                  "statusCode": {
                    "type": "string",
                    "description": "Represents the status code",
                    "example": "MALFORMED_ID"
                  },
                  "fields": {
                    "description": "Represents the fields that generated the error",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "Id"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Multiple Response structure",
        "title": "MultipleResponse@DEPRECATED",
        "x-tags": [
          "Deprecated Models"
        ]
      },
      "uniqueIbField": {
        "title": "uniqueIbField",
        "type": "object",
        "properties": {
          "productRange": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.qa.se.com/token",
            "refreshUrl": "https://api.qa.se.com/token",
            "scopes": {}
          }
        }
      },
      "X-BFO-Authorization": {
        "name": "X-BFO-Authorization",
        "type": "apiKey",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "oauth2": []
    },
    {
      "X-BFO-Authorization": []
    }
  ]
}